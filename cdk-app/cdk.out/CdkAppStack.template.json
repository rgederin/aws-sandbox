{
  "Resources": {
    "rgdbmivpc30981C49": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/Resource"
      }
    },
    "rgdbmivpcrgdbmipublicsubnetSubnet1Subnet9CDCE4D1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "VpcId": {
          "Ref": "rgdbmivpc30981C49"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "rgd-bmi-public-subnet"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/rgd-bmi-public-subnetSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/rgd-bmi-public-subnetSubnet1/Subnet"
      }
    },
    "rgdbmivpcrgdbmipublicsubnetSubnet1RouteTable974743B5": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "rgdbmivpc30981C49"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/rgd-bmi-public-subnetSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/rgd-bmi-public-subnetSubnet1/RouteTable"
      }
    },
    "rgdbmivpcrgdbmipublicsubnetSubnet1RouteTableAssociation1A85EF38": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rgdbmivpcrgdbmipublicsubnetSubnet1RouteTable974743B5"
        },
        "SubnetId": {
          "Ref": "rgdbmivpcrgdbmipublicsubnetSubnet1Subnet9CDCE4D1"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/rgd-bmi-public-subnetSubnet1/RouteTableAssociation"
      }
    },
    "rgdbmivpcrgdbmipublicsubnetSubnet1DefaultRoute8E591311": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "rgdbmivpcrgdbmipublicsubnetSubnet1RouteTable974743B5"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "rgdbmivpcIGWDD404358"
        }
      },
      "DependsOn": [
        "rgdbmivpcVPCGWA32B6FCC"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/rgd-bmi-public-subnetSubnet1/DefaultRoute"
      }
    },
    "rgdbmivpcrgdbmipublicsubnetSubnet2Subnet37D95C2B": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "VpcId": {
          "Ref": "rgdbmivpc30981C49"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "rgd-bmi-public-subnet"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/rgd-bmi-public-subnetSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/rgd-bmi-public-subnetSubnet2/Subnet"
      }
    },
    "rgdbmivpcrgdbmipublicsubnetSubnet2RouteTableCCFF5F04": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "rgdbmivpc30981C49"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/rgd-bmi-public-subnetSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/rgd-bmi-public-subnetSubnet2/RouteTable"
      }
    },
    "rgdbmivpcrgdbmipublicsubnetSubnet2RouteTableAssociationC53A7DD2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rgdbmivpcrgdbmipublicsubnetSubnet2RouteTableCCFF5F04"
        },
        "SubnetId": {
          "Ref": "rgdbmivpcrgdbmipublicsubnetSubnet2Subnet37D95C2B"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/rgd-bmi-public-subnetSubnet2/RouteTableAssociation"
      }
    },
    "rgdbmivpcrgdbmipublicsubnetSubnet2DefaultRouteF5D94D78": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "rgdbmivpcrgdbmipublicsubnetSubnet2RouteTableCCFF5F04"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "rgdbmivpcIGWDD404358"
        }
      },
      "DependsOn": [
        "rgdbmivpcVPCGWA32B6FCC"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/rgd-bmi-public-subnetSubnet2/DefaultRoute"
      }
    },
    "rgdbmivpcrgdbmiprivatesubnet1Subnet1Subnet11B9D644": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.2.0/24",
        "VpcId": {
          "Ref": "rgdbmivpc30981C49"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "rgd-bmi-private-subnet-1"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/rgd-bmi-private-subnet-1Subnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/rgd-bmi-private-subnet-1Subnet1/Subnet"
      }
    },
    "rgdbmivpcrgdbmiprivatesubnet1Subnet1RouteTableC8B705E0": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "rgdbmivpc30981C49"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/rgd-bmi-private-subnet-1Subnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/rgd-bmi-private-subnet-1Subnet1/RouteTable"
      }
    },
    "rgdbmivpcrgdbmiprivatesubnet1Subnet1RouteTableAssociationCFACAA09": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rgdbmivpcrgdbmiprivatesubnet1Subnet1RouteTableC8B705E0"
        },
        "SubnetId": {
          "Ref": "rgdbmivpcrgdbmiprivatesubnet1Subnet1Subnet11B9D644"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/rgd-bmi-private-subnet-1Subnet1/RouteTableAssociation"
      }
    },
    "rgdbmivpcrgdbmiprivatesubnet1Subnet2SubnetE5B80C3E": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.3.0/24",
        "VpcId": {
          "Ref": "rgdbmivpc30981C49"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "rgd-bmi-private-subnet-1"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/rgd-bmi-private-subnet-1Subnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/rgd-bmi-private-subnet-1Subnet2/Subnet"
      }
    },
    "rgdbmivpcrgdbmiprivatesubnet1Subnet2RouteTable2E3A0DC1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "rgdbmivpc30981C49"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/rgd-bmi-private-subnet-1Subnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/rgd-bmi-private-subnet-1Subnet2/RouteTable"
      }
    },
    "rgdbmivpcrgdbmiprivatesubnet1Subnet2RouteTableAssociation0F3637BF": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rgdbmivpcrgdbmiprivatesubnet1Subnet2RouteTable2E3A0DC1"
        },
        "SubnetId": {
          "Ref": "rgdbmivpcrgdbmiprivatesubnet1Subnet2SubnetE5B80C3E"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/rgd-bmi-private-subnet-1Subnet2/RouteTableAssociation"
      }
    },
    "rgdbmivpcIGWDD404358": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/IGW"
      }
    },
    "rgdbmivpcVPCGWA32B6FCC": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "rgdbmivpc30981C49"
        },
        "InternetGatewayId": {
          "Ref": "rgdbmivpcIGWDD404358"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-bmi-vpc/rgd-bmi-vpc/VPCGW"
      }
    },
    "rgdpublicsecuritygroup6949B66D": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "CdkAppStack/rgd-public-security-group/rgd-public-security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "allow SSH access from anywhere",
            "FromPort": 22,
            "IpProtocol": "tcp",
            "ToPort": 22
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "allow HTTP traffic from anywhere",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "allow HTTPS traffic from anywhere",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443
          }
        ],
        "VpcId": {
          "Ref": "rgdbmivpc30981C49"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-public-security-group/rgd-public-security-group/Resource"
      }
    },
    "rgdpublicsecuritygroupfromCdkAppStackrgdpublicsecuritygroup133C6FDD807E130879": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "rgdpublicsecuritygroup6949B66D",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "rgdpublicsecuritygroup6949B66D",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-public-security-group/rgd-public-security-group/from CdkAppStackrgdpublicsecuritygroup133C6FDD:80"
      }
    },
    "rgdpublicgroupInstanceRole0F3ECC1B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkAppStack/rgd-public-group/rgd-public-group"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-public-group/rgd-public-group/InstanceRole/Resource"
      }
    },
    "rgdpublicgroupInstanceProfileEFF63219": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "rgdpublicgroupInstanceRole0F3ECC1B"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-public-group/rgd-public-group/InstanceProfile"
      }
    },
    "rgdpublicgroupLaunchConfig2B990A9D": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t2.micro",
        "IamInstanceProfile": {
          "Ref": "rgdpublicgroupInstanceProfileEFF63219"
        },
        "KeyName": "rgederin-lohika-2021-us-west-2",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "rgdpublicsecuritygroup6949B66D",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash\nsudo su\nyum install -y httpd\nsystemctl start httpd\nsystemctl enable httpd\necho \"<h1>Hello World from $(hostname -f)</h1>\" > /var/www/html/index.html"
        }
      },
      "DependsOn": [
        "rgdpublicgroupInstanceRole0F3ECC1B"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-public-group/rgd-public-group/LaunchConfig"
      }
    },
    "rgdpublicgroupASG51AD7B35": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "2",
        "MinSize": "2",
        "LaunchConfigurationName": {
          "Ref": "rgdpublicgroupLaunchConfig2B990A9D"
        },
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "CdkAppStack/rgd-public-group/rgd-public-group"
          }
        ],
        "TargetGroupARNs": [
          {
            "Ref": "rgdloadbalanceralbListenerdefaulttargetGroupC25B40C9"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "rgdbmivpcrgdbmipublicsubnetSubnet1Subnet9CDCE4D1"
          },
          {
            "Ref": "rgdbmivpcrgdbmipublicsubnetSubnet2Subnet37D95C2B"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-public-group/rgd-public-group/ASG"
      }
    },
    "rgdloadbalanceralbCCFB5A92": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "rgdpublicsecuritygroup6949B66D",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "rgdbmivpcrgdbmipublicsubnetSubnet1Subnet9CDCE4D1"
          },
          {
            "Ref": "rgdbmivpcrgdbmipublicsubnetSubnet2Subnet37D95C2B"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "rgdbmivpcrgdbmipublicsubnetSubnet1DefaultRoute8E591311",
        "rgdbmivpcrgdbmipublicsubnetSubnet2DefaultRouteF5D94D78"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-load-balancer/alb/Resource"
      }
    },
    "rgdloadbalanceralbListener4517D467": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "rgdloadbalanceralbListenerdefaulttargetGroupC25B40C9"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "rgdloadbalanceralbCCFB5A92"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-load-balancer/alb/Listener/Resource"
      }
    },
    "rgdloadbalanceralbListenerdefaulttargetGroupC25B40C9": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckPath": "/",
        "HealthyThresholdCount": 5,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "rgdbmivpc30981C49"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-load-balancer/alb/Listener/default-targetGroup/Resource"
      }
    },
    "rgdloadbalanceralbListenerstaticRuleA333A5CB": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "FixedResponseConfig": {
              "ContentType": "text/html",
              "MessageBody": "<h1>Static ALB Response</h1>",
              "StatusCode": "200"
            },
            "Type": "fixed-response"
          }
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "PathPatternConfig": {
              "Values": [
                "/static"
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "rgdloadbalanceralbListener4517D467"
        },
        "Priority": 5
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/rgd-load-balancer/alb/Listener/--staticRule/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/31R32vCMBD+W3yP2RQ22GPngwjCSiu+jmt66mmalOSiSOn/vtiqLWPsKff9yHeXy1zO3uTrBC5+qsrTVFMhm5xBnUSkvhtUc9lsayUWO7NNFyINhSaVh8Ig37ihymxg3EChceAHLvHeKgIma55mkTo6A+OQsTKMLtbLyF7gem96RwnHsQ4VGhY5quCIr0tnQ921+5dYmb1D71sBga1XoMnsZZNEkPfgeW0NwajDwpod7YN7jvvb2gqCSjaZ7R/7OFfGMxiFqbM70tgK1OCZlLZQFqCjFAPOcaFJXcctdvHrqH12GrpugjEe+8gzmrvnUY/0Dbh9XNzjIWP4R0oW+onHuG1Fht4GpzopBQcVct/xK3Ad+m8eWeKeSrrFtsLYEuXRv5xn7/JDziZHTzR1wTBVKLP+/AEMBAnjawIAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "CdkAppStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Parameters": {
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
    },
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Outputs": {
    "rgdloadbalanceralbDNSF4419F82": {
      "Value": {
        "Fn::GetAtt": [
          "rgdloadbalanceralbCCFB5A92",
          "DNSName"
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}