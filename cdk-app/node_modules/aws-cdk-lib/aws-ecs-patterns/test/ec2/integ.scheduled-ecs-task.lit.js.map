{
  "version": 3,
  "sources": ["integ.scheduled-ecs-task.lit.ts"],
  "sourcesContent": ["import * as ec2 from '../../../aws-ec2';\nimport * as ecs from '../../../aws-ecs';\nimport * as events from '../../../aws-events';\nimport * as cdk from '../../../core';\n\nimport { ScheduledEc2Task } from '../../lib';\n\nconst app = new cdk.App();\n\nclass EventStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'Vpc', { maxAzs: 1 });\n\n    const cluster = new ecs.Cluster(this, 'EcsCluster', { vpc });\n    cluster.addCapacity('DefaultAutoScalingGroup', {\n      instanceType: new ec2.InstanceType('t2.micro'),\n    });\n\n    /// !show\n    // Create the scheduled task\n    new ScheduledEc2Task(this, 'ScheduledEc2Task', {\n      cluster,\n      scheduledEc2TaskImageOptions: {\n        image: ecs.ContainerImage.fromRegistry('amazon/amazon-ecs-sample'),\n        memoryLimitMiB: 512,\n        cpu: 1,\n        environment: { TRIGGER: 'CloudWatch Events' },\n      },\n      desiredTaskCount: 2,\n      schedule: events.Schedule.rate(cdk.Duration.minutes(1)),\n    });\n    /// !hide\n  }\n}\n\nnew EventStack(app, 'aws-ecs-integ-ecs');\napp.synth();\n"],
  "mappings": "oEAAA,KAAA,KAAA,QAAA,oBACA,IAAA,QAAA,oBACA,OAAA,QAAA,uBACA,IAAA,QAAA,iBAEA,MAAA,QAAA,aAEM,IAAM,GAAI,KAAI,IAEpB,wBAAyB,KAAI,KAAK,CAChC,YAAY,MAAgB,GAAU,CACpC,MAAM,MAAO,IAEb,KAAM,KAAM,GAAI,KAAI,IAAI,KAAM,MAAO,CAAE,OAAQ,IAEzC,QAAU,GAAI,KAAI,QAAQ,KAAM,aAAc,CAAE,MACtD,QAAQ,YAAY,0BAA2B,CAC7C,aAAc,GAAI,KAAI,aAAa,cAKrC,GAAI,OAAA,iBAAiB,KAAM,mBAAoB,CAC7C,QACA,6BAA8B,CAC5B,MAAO,IAAI,eAAe,aAAa,4BACvC,eAAgB,IAChB,IAAK,EACL,YAAa,CAAE,QAAS,sBAE1B,iBAAkB,EAClB,SAAU,OAAO,SAAS,KAAK,IAAI,SAAS,QAAQ,OAM1D,GAAI,YAAW,IAAK,qBACpB,IAAI",
  "names": []
}
