{
  "version": 3,
  "sources": ["fis.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-03-01T02:10:06.971Z\",\"fingerprint\":\"ry/08sEnYZ2VqlnRfG/vr0L68hqfTJtGPNAiOBLz8fI=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n/**\n * Properties for defining a `CfnExperimentTemplate`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html\n */\nexport interface CfnExperimentTemplateProps {\n\n    /**\n     * A description for the experiment template.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html#cfn-fis-experimenttemplate-description\n     */\n    readonly description: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of an IAM role that grants the AWS FIS service permission to perform service actions on your behalf.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html#cfn-fis-experimenttemplate-rolearn\n     */\n    readonly roleArn: string;\n\n    /**\n     * The stop conditions.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html#cfn-fis-experimenttemplate-stopconditions\n     */\n    readonly stopConditions: Array<CfnExperimentTemplate.ExperimentTemplateStopConditionProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The tags to apply to the experiment template.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html#cfn-fis-experimenttemplate-tags\n     */\n    readonly tags: { [key: string]: (string) };\n\n    /**\n     * The targets for the experiment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html#cfn-fis-experimenttemplate-targets\n     */\n    readonly targets: { [key: string]: (CfnExperimentTemplate.ExperimentTemplateTargetProperty | cdk.IResolvable) } | cdk.IResolvable;\n\n    /**\n     * The actions for the experiment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html#cfn-fis-experimenttemplate-actions\n     */\n    readonly actions?: { [key: string]: (CfnExperimentTemplate.ExperimentTemplateActionProperty | cdk.IResolvable) } | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnExperimentTemplateProps`\n *\n * @param properties - the TypeScript properties of a `CfnExperimentTemplateProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnExperimentTemplatePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('actions', cdk.hashValidator(CfnExperimentTemplate_ExperimentTemplateActionPropertyValidator))(properties.actions));\n    errors.collect(cdk.propertyValidator('description', cdk.requiredValidator)(properties.description));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('roleArn', cdk.requiredValidator)(properties.roleArn));\n    errors.collect(cdk.propertyValidator('roleArn', cdk.validateString)(properties.roleArn));\n    errors.collect(cdk.propertyValidator('stopConditions', cdk.requiredValidator)(properties.stopConditions));\n    errors.collect(cdk.propertyValidator('stopConditions', cdk.listValidator(CfnExperimentTemplate_ExperimentTemplateStopConditionPropertyValidator))(properties.stopConditions));\n    errors.collect(cdk.propertyValidator('tags', cdk.requiredValidator)(properties.tags));\n    errors.collect(cdk.propertyValidator('tags', cdk.hashValidator(cdk.validateString))(properties.tags));\n    errors.collect(cdk.propertyValidator('targets', cdk.requiredValidator)(properties.targets));\n    errors.collect(cdk.propertyValidator('targets', cdk.hashValidator(CfnExperimentTemplate_ExperimentTemplateTargetPropertyValidator))(properties.targets));\n    return errors.wrap('supplied properties not correct for \"CfnExperimentTemplateProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::FIS::ExperimentTemplate` resource\n *\n * @param properties - the TypeScript properties of a `CfnExperimentTemplateProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::FIS::ExperimentTemplate` resource.\n */\n// @ts-ignore TS6133\nfunction cfnExperimentTemplatePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnExperimentTemplatePropsValidator(properties).assertSuccess();\n    return {\n        Description: cdk.stringToCloudFormation(properties.description),\n        RoleArn: cdk.stringToCloudFormation(properties.roleArn),\n        StopConditions: cdk.listMapper(cfnExperimentTemplateExperimentTemplateStopConditionPropertyToCloudFormation)(properties.stopConditions),\n        Tags: cdk.hashMapper(cdk.stringToCloudFormation)(properties.tags),\n        Targets: cdk.hashMapper(cfnExperimentTemplateExperimentTemplateTargetPropertyToCloudFormation)(properties.targets),\n        Actions: cdk.hashMapper(cfnExperimentTemplateExperimentTemplateActionPropertyToCloudFormation)(properties.actions),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnExperimentTemplatePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnExperimentTemplateProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnExperimentTemplateProps>();\n    ret.addPropertyResult('description', 'Description', cfn_parse.FromCloudFormation.getString(properties.Description));\n    ret.addPropertyResult('roleArn', 'RoleArn', cfn_parse.FromCloudFormation.getString(properties.RoleArn));\n    ret.addPropertyResult('stopConditions', 'StopConditions', cfn_parse.FromCloudFormation.getArray(CfnExperimentTemplateExperimentTemplateStopConditionPropertyFromCloudFormation)(properties.StopConditions));\n    ret.addPropertyResult('tags', 'Tags', cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Tags) as any);\n    ret.addPropertyResult('targets', 'Targets', cfn_parse.FromCloudFormation.getMap(CfnExperimentTemplateExperimentTemplateTargetPropertyFromCloudFormation)(properties.Targets));\n    ret.addPropertyResult('actions', 'Actions', properties.Actions != null ? cfn_parse.FromCloudFormation.getMap(CfnExperimentTemplateExperimentTemplateActionPropertyFromCloudFormation)(properties.Actions) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::FIS::ExperimentTemplate`\n *\n * Specifies an experiment template.\n *\n * An experiment template includes the following components:\n *\n * - *Targets* : A target can be a specific resource in your AWS environment, or one or more resources that match criteria that you specify, for example, resources that have specific tags.\n * - *Actions* : The actions to carry out on the target. You can specify multiple actions, the duration of each action, and when to start each action during an experiment.\n * - *Stop conditions* : If a stop condition is triggered while an experiment is running, the experiment is automatically stopped. You can define a stop condition as a CloudWatch alarm.\n *\n * For more information, see [Experiment templates](https://docs.aws.amazon.com/fis/latest/userguide/experiment-templates.html) in the *AWS Fault Injection Simulator User Guide* .\n *\n * @cloudformationResource AWS::FIS::ExperimentTemplate\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html\n */\nexport class CfnExperimentTemplate extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::FIS::ExperimentTemplate\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnExperimentTemplate {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnExperimentTemplatePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnExperimentTemplate(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the experiment template.\n     * @cloudformationAttribute Id\n     */\n    public readonly attrId: string;\n\n    /**\n     * A description for the experiment template.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html#cfn-fis-experimenttemplate-description\n     */\n    public description: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of an IAM role that grants the AWS FIS service permission to perform service actions on your behalf.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html#cfn-fis-experimenttemplate-rolearn\n     */\n    public roleArn: string;\n\n    /**\n     * The stop conditions.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html#cfn-fis-experimenttemplate-stopconditions\n     */\n    public stopConditions: Array<CfnExperimentTemplate.ExperimentTemplateStopConditionProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * The tags to apply to the experiment template.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html#cfn-fis-experimenttemplate-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * The targets for the experiment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html#cfn-fis-experimenttemplate-targets\n     */\n    public targets: { [key: string]: (CfnExperimentTemplate.ExperimentTemplateTargetProperty | cdk.IResolvable) } | cdk.IResolvable;\n\n    /**\n     * The actions for the experiment.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html#cfn-fis-experimenttemplate-actions\n     */\n    public actions: { [key: string]: (CfnExperimentTemplate.ExperimentTemplateActionProperty | cdk.IResolvable) } | cdk.IResolvable | undefined;\n\n    /**\n     * Create a new `AWS::FIS::ExperimentTemplate`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnExperimentTemplateProps) {\n        super(scope, id, { type: CfnExperimentTemplate.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'description', this);\n        cdk.requireProperty(props, 'roleArn', this);\n        cdk.requireProperty(props, 'stopConditions', this);\n        cdk.requireProperty(props, 'tags', this);\n        cdk.requireProperty(props, 'targets', this);\n        this.attrId = cdk.Token.asString(this.getAtt('Id'));\n\n        this.description = props.description;\n        this.roleArn = props.roleArn;\n        this.stopConditions = props.stopConditions;\n        this.tags = new cdk.TagManager(cdk.TagType.MAP, \"AWS::FIS::ExperimentTemplate\", props.tags, { tagPropertyName: 'tags' });\n        this.targets = props.targets;\n        this.actions = props.actions;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnExperimentTemplate.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            description: this.description,\n            roleArn: this.roleArn,\n            stopConditions: this.stopConditions,\n            tags: this.tags.renderTags(),\n            targets: this.targets,\n            actions: this.actions,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnExperimentTemplatePropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnExperimentTemplate {\n    /**\n     * Specifies an action for an experiment template.\n     *\n     * For more information, see [Actions](https://docs.aws.amazon.com/fis/latest/userguide/actions.html) in the *AWS Fault Injection Simulator User Guide* .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fis-experimenttemplate-experimenttemplateaction.html\n     */\n    export interface ExperimentTemplateActionProperty {\n        /**\n         * The ID of the action. The format of the action ID is: aws: *service-name* : *action-type* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fis-experimenttemplate-experimenttemplateaction.html#cfn-fis-experimenttemplate-experimenttemplateaction-actionid\n         */\n        readonly actionId: string;\n        /**\n         * A description for the action.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fis-experimenttemplate-experimenttemplateaction.html#cfn-fis-experimenttemplate-experimenttemplateaction-description\n         */\n        readonly description?: string;\n        /**\n         * The parameters for the action, if applicable.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fis-experimenttemplate-experimenttemplateaction.html#cfn-fis-experimenttemplate-experimenttemplateaction-parameters\n         */\n        readonly parameters?: { [key: string]: (string) } | cdk.IResolvable;\n        /**\n         * The name of the action that must be completed before the current action starts. Omit this parameter to run the action at the start of the experiment.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fis-experimenttemplate-experimenttemplateaction.html#cfn-fis-experimenttemplate-experimenttemplateaction-startafter\n         */\n        readonly startAfter?: string[];\n        /**\n         * The targets for the action.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fis-experimenttemplate-experimenttemplateaction.html#cfn-fis-experimenttemplate-experimenttemplateaction-targets\n         */\n        readonly targets?: { [key: string]: (string) } | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ExperimentTemplateActionProperty`\n *\n * @param properties - the TypeScript properties of a `ExperimentTemplateActionProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnExperimentTemplate_ExperimentTemplateActionPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('actionId', cdk.requiredValidator)(properties.actionId));\n    errors.collect(cdk.propertyValidator('actionId', cdk.validateString)(properties.actionId));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('parameters', cdk.hashValidator(cdk.validateString))(properties.parameters));\n    errors.collect(cdk.propertyValidator('startAfter', cdk.listValidator(cdk.validateString))(properties.startAfter));\n    errors.collect(cdk.propertyValidator('targets', cdk.hashValidator(cdk.validateString))(properties.targets));\n    return errors.wrap('supplied properties not correct for \"ExperimentTemplateActionProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::FIS::ExperimentTemplate.ExperimentTemplateAction` resource\n *\n * @param properties - the TypeScript properties of a `ExperimentTemplateActionProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::FIS::ExperimentTemplate.ExperimentTemplateAction` resource.\n */\n// @ts-ignore TS6133\nfunction cfnExperimentTemplateExperimentTemplateActionPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnExperimentTemplate_ExperimentTemplateActionPropertyValidator(properties).assertSuccess();\n    return {\n        ActionId: cdk.stringToCloudFormation(properties.actionId),\n        Description: cdk.stringToCloudFormation(properties.description),\n        Parameters: cdk.hashMapper(cdk.stringToCloudFormation)(properties.parameters),\n        StartAfter: cdk.listMapper(cdk.stringToCloudFormation)(properties.startAfter),\n        Targets: cdk.hashMapper(cdk.stringToCloudFormation)(properties.targets),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnExperimentTemplateExperimentTemplateActionPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnExperimentTemplate.ExperimentTemplateActionProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnExperimentTemplate.ExperimentTemplateActionProperty>();\n    ret.addPropertyResult('actionId', 'ActionId', cfn_parse.FromCloudFormation.getString(properties.ActionId));\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('parameters', 'Parameters', properties.Parameters != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Parameters) : undefined);\n    ret.addPropertyResult('startAfter', 'StartAfter', properties.StartAfter != null ? cfn_parse.FromCloudFormation.getStringArray(properties.StartAfter) : undefined);\n    ret.addPropertyResult('targets', 'Targets', properties.Targets != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Targets) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnExperimentTemplate {\n    /**\n     * Specifies a stop condition for an experiment template.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fis-experimenttemplate-experimenttemplatestopcondition.html\n     */\n    export interface ExperimentTemplateStopConditionProperty {\n        /**\n         * The source for the stop condition. Specify `aws:cloudwatch:alarm` if the stop condition is defined by a CloudWatch alarm. Specify `none` if there is no stop condition.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fis-experimenttemplate-experimenttemplatestopcondition.html#cfn-fis-experimenttemplate-experimenttemplatestopcondition-source\n         */\n        readonly source: string;\n        /**\n         * The Amazon Resource Name (ARN) of the CloudWatch alarm. This is required if the source is a CloudWatch alarm.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fis-experimenttemplate-experimenttemplatestopcondition.html#cfn-fis-experimenttemplate-experimenttemplatestopcondition-value\n         */\n        readonly value?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ExperimentTemplateStopConditionProperty`\n *\n * @param properties - the TypeScript properties of a `ExperimentTemplateStopConditionProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnExperimentTemplate_ExperimentTemplateStopConditionPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('source', cdk.requiredValidator)(properties.source));\n    errors.collect(cdk.propertyValidator('source', cdk.validateString)(properties.source));\n    errors.collect(cdk.propertyValidator('value', cdk.validateString)(properties.value));\n    return errors.wrap('supplied properties not correct for \"ExperimentTemplateStopConditionProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::FIS::ExperimentTemplate.ExperimentTemplateStopCondition` resource\n *\n * @param properties - the TypeScript properties of a `ExperimentTemplateStopConditionProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::FIS::ExperimentTemplate.ExperimentTemplateStopCondition` resource.\n */\n// @ts-ignore TS6133\nfunction cfnExperimentTemplateExperimentTemplateStopConditionPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnExperimentTemplate_ExperimentTemplateStopConditionPropertyValidator(properties).assertSuccess();\n    return {\n        Source: cdk.stringToCloudFormation(properties.source),\n        Value: cdk.stringToCloudFormation(properties.value),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnExperimentTemplateExperimentTemplateStopConditionPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnExperimentTemplate.ExperimentTemplateStopConditionProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnExperimentTemplate.ExperimentTemplateStopConditionProperty>();\n    ret.addPropertyResult('source', 'Source', cfn_parse.FromCloudFormation.getString(properties.Source));\n    ret.addPropertyResult('value', 'Value', properties.Value != null ? cfn_parse.FromCloudFormation.getString(properties.Value) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnExperimentTemplate {\n    /**\n     * Specifies a target for an experiment. You must specify at least one Amazon Resource Name (ARN) or at least one resource tag. You cannot specify both ARNs and tags.\n     *\n     * For more information, see [Targets](https://docs.aws.amazon.com/fis/latest/userguide/targets.html) in the *AWS Fault Injection Simulator User Guide* .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fis-experimenttemplate-experimenttemplatetarget.html\n     */\n    export interface ExperimentTemplateTargetProperty {\n        /**\n         * The filters to apply to identify target resources using specific attributes.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fis-experimenttemplate-experimenttemplatetarget.html#cfn-fis-experimenttemplate-experimenttemplatetarget-filters\n         */\n        readonly filters?: Array<CfnExperimentTemplate.ExperimentTemplateTargetFilterProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * The Amazon Resource Names (ARNs) of the resources.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fis-experimenttemplate-experimenttemplatetarget.html#cfn-fis-experimenttemplate-experimenttemplatetarget-resourcearns\n         */\n        readonly resourceArns?: string[];\n        /**\n         * The tags for the target resources.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fis-experimenttemplate-experimenttemplatetarget.html#cfn-fis-experimenttemplate-experimenttemplatetarget-resourcetags\n         */\n        readonly resourceTags?: { [key: string]: (string) } | cdk.IResolvable;\n        /**\n         * The resource type. The resource type must be supported for the specified action.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fis-experimenttemplate-experimenttemplatetarget.html#cfn-fis-experimenttemplate-experimenttemplatetarget-resourcetype\n         */\n        readonly resourceType: string;\n        /**\n         * Scopes the identified resources to a specific count of the resources at random, or a percentage of the resources. All identified resources are included in the target.\n         *\n         * - ALL - Run the action on all identified targets. This is the default.\n         * - COUNT(n) - Run the action on the specified number of targets, chosen from the identified targets at random. For example, COUNT(1) selects one of the targets.\n         * - PERCENT(n) - Run the action on the specified percentage of targets, chosen from the identified targets at random. For example, PERCENT(25) selects 25% of the targets.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fis-experimenttemplate-experimenttemplatetarget.html#cfn-fis-experimenttemplate-experimenttemplatetarget-selectionmode\n         */\n        readonly selectionMode: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ExperimentTemplateTargetProperty`\n *\n * @param properties - the TypeScript properties of a `ExperimentTemplateTargetProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnExperimentTemplate_ExperimentTemplateTargetPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('filters', cdk.listValidator(CfnExperimentTemplate_ExperimentTemplateTargetFilterPropertyValidator))(properties.filters));\n    errors.collect(cdk.propertyValidator('resourceArns', cdk.listValidator(cdk.validateString))(properties.resourceArns));\n    errors.collect(cdk.propertyValidator('resourceTags', cdk.hashValidator(cdk.validateString))(properties.resourceTags));\n    errors.collect(cdk.propertyValidator('resourceType', cdk.requiredValidator)(properties.resourceType));\n    errors.collect(cdk.propertyValidator('resourceType', cdk.validateString)(properties.resourceType));\n    errors.collect(cdk.propertyValidator('selectionMode', cdk.requiredValidator)(properties.selectionMode));\n    errors.collect(cdk.propertyValidator('selectionMode', cdk.validateString)(properties.selectionMode));\n    return errors.wrap('supplied properties not correct for \"ExperimentTemplateTargetProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::FIS::ExperimentTemplate.ExperimentTemplateTarget` resource\n *\n * @param properties - the TypeScript properties of a `ExperimentTemplateTargetProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::FIS::ExperimentTemplate.ExperimentTemplateTarget` resource.\n */\n// @ts-ignore TS6133\nfunction cfnExperimentTemplateExperimentTemplateTargetPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnExperimentTemplate_ExperimentTemplateTargetPropertyValidator(properties).assertSuccess();\n    return {\n        Filters: cdk.listMapper(cfnExperimentTemplateExperimentTemplateTargetFilterPropertyToCloudFormation)(properties.filters),\n        ResourceArns: cdk.listMapper(cdk.stringToCloudFormation)(properties.resourceArns),\n        ResourceTags: cdk.hashMapper(cdk.stringToCloudFormation)(properties.resourceTags),\n        ResourceType: cdk.stringToCloudFormation(properties.resourceType),\n        SelectionMode: cdk.stringToCloudFormation(properties.selectionMode),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnExperimentTemplateExperimentTemplateTargetPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnExperimentTemplate.ExperimentTemplateTargetProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnExperimentTemplate.ExperimentTemplateTargetProperty>();\n    ret.addPropertyResult('filters', 'Filters', properties.Filters != null ? cfn_parse.FromCloudFormation.getArray(CfnExperimentTemplateExperimentTemplateTargetFilterPropertyFromCloudFormation)(properties.Filters) : undefined);\n    ret.addPropertyResult('resourceArns', 'ResourceArns', properties.ResourceArns != null ? cfn_parse.FromCloudFormation.getStringArray(properties.ResourceArns) : undefined);\n    ret.addPropertyResult('resourceTags', 'ResourceTags', properties.ResourceTags != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.ResourceTags) : undefined);\n    ret.addPropertyResult('resourceType', 'ResourceType', cfn_parse.FromCloudFormation.getString(properties.ResourceType));\n    ret.addPropertyResult('selectionMode', 'SelectionMode', cfn_parse.FromCloudFormation.getString(properties.SelectionMode));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnExperimentTemplate {\n    /**\n     * Specifies a filter used for the target resource input in an experiment template.\n     *\n     * For more information, see [Resource filters](https://docs.aws.amazon.com/fis/latest/userguide/targets.html#target-filters) in the *AWS Fault Injection Simulator User Guide* .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fis-experimenttemplate-experimenttemplatetargetfilter.html\n     */\n    export interface ExperimentTemplateTargetFilterProperty {\n        /**\n         * The attribute path for the filter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fis-experimenttemplate-experimenttemplatetargetfilter.html#cfn-fis-experimenttemplate-experimenttemplatetargetfilter-path\n         */\n        readonly path: string;\n        /**\n         * The attribute values for the filter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fis-experimenttemplate-experimenttemplatetargetfilter.html#cfn-fis-experimenttemplate-experimenttemplatetargetfilter-values\n         */\n        readonly values: string[];\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ExperimentTemplateTargetFilterProperty`\n *\n * @param properties - the TypeScript properties of a `ExperimentTemplateTargetFilterProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnExperimentTemplate_ExperimentTemplateTargetFilterPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('path', cdk.requiredValidator)(properties.path));\n    errors.collect(cdk.propertyValidator('path', cdk.validateString)(properties.path));\n    errors.collect(cdk.propertyValidator('values', cdk.requiredValidator)(properties.values));\n    errors.collect(cdk.propertyValidator('values', cdk.listValidator(cdk.validateString))(properties.values));\n    return errors.wrap('supplied properties not correct for \"ExperimentTemplateTargetFilterProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::FIS::ExperimentTemplate.ExperimentTemplateTargetFilter` resource\n *\n * @param properties - the TypeScript properties of a `ExperimentTemplateTargetFilterProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::FIS::ExperimentTemplate.ExperimentTemplateTargetFilter` resource.\n */\n// @ts-ignore TS6133\nfunction cfnExperimentTemplateExperimentTemplateTargetFilterPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnExperimentTemplate_ExperimentTemplateTargetFilterPropertyValidator(properties).assertSuccess();\n    return {\n        Path: cdk.stringToCloudFormation(properties.path),\n        Values: cdk.listMapper(cdk.stringToCloudFormation)(properties.values),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnExperimentTemplateExperimentTemplateTargetFilterPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnExperimentTemplate.ExperimentTemplateTargetFilterProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnExperimentTemplate.ExperimentTemplateTargetFilterProperty>();\n    ret.addPropertyResult('path', 'Path', cfn_parse.FromCloudFormation.getString(properties.Path));\n    ret.addPropertyResult('values', 'Values', cfn_parse.FromCloudFormation.getStringArray(properties.Values));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n"],
  "mappings": "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",
  "names": []
}
