{
  "version": 3,
  "sources": ["eventschemas.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-03-01T02:10:06.929Z\",\"fingerprint\":\"puLCPW7i+CmO8lxcwJEKNYAsP1ocbNxOvJUzxLSYqTc=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n/**\n * Properties for defining a `CfnDiscoverer`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-discoverer.html\n */\nexport interface CfnDiscovererProps {\n\n    /**\n     * The ARN of the event bus.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-discoverer.html#cfn-eventschemas-discoverer-sourcearn\n     */\n    readonly sourceArn: string;\n\n    /**\n     * Allows for the discovery of the event schemas that are sent to the event bus from another account.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-discoverer.html#cfn-eventschemas-discoverer-crossaccount\n     */\n    readonly crossAccount?: boolean | cdk.IResolvable;\n\n    /**\n     * A description for the discoverer.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-discoverer.html#cfn-eventschemas-discoverer-description\n     */\n    readonly description?: string;\n\n    /**\n     * Tags associated with the resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-discoverer.html#cfn-eventschemas-discoverer-tags\n     */\n    readonly tags?: CfnDiscoverer.TagsEntryProperty[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnDiscovererProps`\n *\n * @param properties - the TypeScript properties of a `CfnDiscovererProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnDiscovererPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('crossAccount', cdk.validateBoolean)(properties.crossAccount));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('sourceArn', cdk.requiredValidator)(properties.sourceArn));\n    errors.collect(cdk.propertyValidator('sourceArn', cdk.validateString)(properties.sourceArn));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(CfnDiscoverer_TagsEntryPropertyValidator))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnDiscovererProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EventSchemas::Discoverer` resource\n *\n * @param properties - the TypeScript properties of a `CfnDiscovererProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EventSchemas::Discoverer` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDiscovererPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDiscovererPropsValidator(properties).assertSuccess();\n    return {\n        SourceArn: cdk.stringToCloudFormation(properties.sourceArn),\n        CrossAccount: cdk.booleanToCloudFormation(properties.crossAccount),\n        Description: cdk.stringToCloudFormation(properties.description),\n        Tags: cdk.listMapper(cfnDiscovererTagsEntryPropertyToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDiscovererPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDiscovererProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDiscovererProps>();\n    ret.addPropertyResult('sourceArn', 'SourceArn', cfn_parse.FromCloudFormation.getString(properties.SourceArn));\n    ret.addPropertyResult('crossAccount', 'CrossAccount', properties.CrossAccount != null ? cfn_parse.FromCloudFormation.getBoolean(properties.CrossAccount) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnDiscovererTagsEntryPropertyFromCloudFormation)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EventSchemas::Discoverer`\n *\n * Use the `AWS::EventSchemas::Discoverer` resource to specify a *discoverer* that is associated with an event bus. A discoverer allows the Amazon EventBridge Schema Registry to automatically generate schemas based on events on an event bus.\n *\n * @cloudformationResource AWS::EventSchemas::Discoverer\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-discoverer.html\n */\nexport class CfnDiscoverer extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EventSchemas::Discoverer\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnDiscoverer {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnDiscovererPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnDiscoverer(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * Defines whether event schemas from other accounts are discovered. Default is True.\n     * @cloudformationAttribute CrossAccount\n     */\n    public readonly attrCrossAccount: cdk.IResolvable;\n\n    /**\n     * The ARN of the discoverer.\n     * @cloudformationAttribute DiscovererArn\n     */\n    public readonly attrDiscovererArn: string;\n\n    /**\n     * The ID of the discoverer.\n     * @cloudformationAttribute DiscovererId\n     */\n    public readonly attrDiscovererId: string;\n\n    /**\n     * The ARN of the event bus.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-discoverer.html#cfn-eventschemas-discoverer-sourcearn\n     */\n    public sourceArn: string;\n\n    /**\n     * Allows for the discovery of the event schemas that are sent to the event bus from another account.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-discoverer.html#cfn-eventschemas-discoverer-crossaccount\n     */\n    public crossAccount: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * A description for the discoverer.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-discoverer.html#cfn-eventschemas-discoverer-description\n     */\n    public description: string | undefined;\n\n    /**\n     * Tags associated with the resource.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-discoverer.html#cfn-eventschemas-discoverer-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EventSchemas::Discoverer`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnDiscovererProps) {\n        super(scope, id, { type: CfnDiscoverer.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'sourceArn', this);\n        this.attrCrossAccount = this.getAtt('CrossAccount');\n        this.attrDiscovererArn = cdk.Token.asString(this.getAtt('DiscovererArn'));\n        this.attrDiscovererId = cdk.Token.asString(this.getAtt('DiscovererId'));\n\n        this.sourceArn = props.sourceArn;\n        this.crossAccount = props.crossAccount;\n        this.description = props.description;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EventSchemas::Discoverer\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnDiscoverer.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            sourceArn: this.sourceArn,\n            crossAccount: this.crossAccount,\n            description: this.description,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnDiscovererPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnDiscoverer {\n    /**\n     * Tags to associate with the discoverer.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eventschemas-discoverer-tagsentry.html\n     */\n    export interface TagsEntryProperty {\n        /**\n         * They key of a key-value pair.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eventschemas-discoverer-tagsentry.html#cfn-eventschemas-discoverer-tagsentry-key\n         */\n        readonly key: string;\n        /**\n         * They value of a key-value pair.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eventschemas-discoverer-tagsentry.html#cfn-eventschemas-discoverer-tagsentry-value\n         */\n        readonly value: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TagsEntryProperty`\n *\n * @param properties - the TypeScript properties of a `TagsEntryProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnDiscoverer_TagsEntryPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('key', cdk.requiredValidator)(properties.key));\n    errors.collect(cdk.propertyValidator('key', cdk.validateString)(properties.key));\n    errors.collect(cdk.propertyValidator('value', cdk.requiredValidator)(properties.value));\n    errors.collect(cdk.propertyValidator('value', cdk.validateString)(properties.value));\n    return errors.wrap('supplied properties not correct for \"TagsEntryProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EventSchemas::Discoverer.TagsEntry` resource\n *\n * @param properties - the TypeScript properties of a `TagsEntryProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EventSchemas::Discoverer.TagsEntry` resource.\n */\n// @ts-ignore TS6133\nfunction cfnDiscovererTagsEntryPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnDiscoverer_TagsEntryPropertyValidator(properties).assertSuccess();\n    return {\n        Key: cdk.stringToCloudFormation(properties.key),\n        Value: cdk.stringToCloudFormation(properties.value),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnDiscovererTagsEntryPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnDiscoverer.TagsEntryProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnDiscoverer.TagsEntryProperty>();\n    ret.addPropertyResult('key', 'Key', cfn_parse.FromCloudFormation.getString(properties.Key));\n    ret.addPropertyResult('value', 'Value', cfn_parse.FromCloudFormation.getString(properties.Value));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnRegistry`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registry.html\n */\nexport interface CfnRegistryProps {\n\n    /**\n     * A description of the registry to be created.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registry.html#cfn-eventschemas-registry-description\n     */\n    readonly description?: string;\n\n    /**\n     * The name of the schema registry.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registry.html#cfn-eventschemas-registry-registryname\n     */\n    readonly registryName?: string;\n\n    /**\n     * Tags to associate with the registry.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registry.html#cfn-eventschemas-registry-tags\n     */\n    readonly tags?: CfnRegistry.TagsEntryProperty[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnRegistryProps`\n *\n * @param properties - the TypeScript properties of a `CfnRegistryProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnRegistryPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('registryName', cdk.validateString)(properties.registryName));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(CfnRegistry_TagsEntryPropertyValidator))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnRegistryProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EventSchemas::Registry` resource\n *\n * @param properties - the TypeScript properties of a `CfnRegistryProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EventSchemas::Registry` resource.\n */\n// @ts-ignore TS6133\nfunction cfnRegistryPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnRegistryPropsValidator(properties).assertSuccess();\n    return {\n        Description: cdk.stringToCloudFormation(properties.description),\n        RegistryName: cdk.stringToCloudFormation(properties.registryName),\n        Tags: cdk.listMapper(cfnRegistryTagsEntryPropertyToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnRegistryPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnRegistryProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnRegistryProps>();\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('registryName', 'RegistryName', properties.RegistryName != null ? cfn_parse.FromCloudFormation.getString(properties.RegistryName) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnRegistryTagsEntryPropertyFromCloudFormation)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EventSchemas::Registry`\n *\n * Use the `AWS::EventSchemas::Registry` to specify a schema registry. Schema registries are containers for Schemas. Registries collect and organize schemas so that your schemas are in logical groups.\n *\n * @cloudformationResource AWS::EventSchemas::Registry\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registry.html\n */\nexport class CfnRegistry extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EventSchemas::Registry\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnRegistry {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnRegistryPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnRegistry(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ARN of the registry.\n     * @cloudformationAttribute RegistryArn\n     */\n    public readonly attrRegistryArn: string;\n\n    /**\n     * The name of the registry.\n     * @cloudformationAttribute RegistryName\n     */\n    public readonly attrRegistryName: string;\n\n    /**\n     * A description of the registry to be created.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registry.html#cfn-eventschemas-registry-description\n     */\n    public description: string | undefined;\n\n    /**\n     * The name of the schema registry.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registry.html#cfn-eventschemas-registry-registryname\n     */\n    public registryName: string | undefined;\n\n    /**\n     * Tags to associate with the registry.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registry.html#cfn-eventschemas-registry-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EventSchemas::Registry`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnRegistryProps = {}) {\n        super(scope, id, { type: CfnRegistry.CFN_RESOURCE_TYPE_NAME, properties: props });\n        this.attrRegistryArn = cdk.Token.asString(this.getAtt('RegistryArn'));\n        this.attrRegistryName = cdk.Token.asString(this.getAtt('RegistryName'));\n\n        this.description = props.description;\n        this.registryName = props.registryName;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EventSchemas::Registry\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnRegistry.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            description: this.description,\n            registryName: this.registryName,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnRegistryPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnRegistry {\n    /**\n     * Tags to associate with the schema registry.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eventschemas-registry-tagsentry.html\n     */\n    export interface TagsEntryProperty {\n        /**\n         * They key of a key-value pair.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eventschemas-registry-tagsentry.html#cfn-eventschemas-registry-tagsentry-key\n         */\n        readonly key: string;\n        /**\n         * They value of a key-value pair.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eventschemas-registry-tagsentry.html#cfn-eventschemas-registry-tagsentry-value\n         */\n        readonly value: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TagsEntryProperty`\n *\n * @param properties - the TypeScript properties of a `TagsEntryProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnRegistry_TagsEntryPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('key', cdk.requiredValidator)(properties.key));\n    errors.collect(cdk.propertyValidator('key', cdk.validateString)(properties.key));\n    errors.collect(cdk.propertyValidator('value', cdk.requiredValidator)(properties.value));\n    errors.collect(cdk.propertyValidator('value', cdk.validateString)(properties.value));\n    return errors.wrap('supplied properties not correct for \"TagsEntryProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EventSchemas::Registry.TagsEntry` resource\n *\n * @param properties - the TypeScript properties of a `TagsEntryProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EventSchemas::Registry.TagsEntry` resource.\n */\n// @ts-ignore TS6133\nfunction cfnRegistryTagsEntryPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnRegistry_TagsEntryPropertyValidator(properties).assertSuccess();\n    return {\n        Key: cdk.stringToCloudFormation(properties.key),\n        Value: cdk.stringToCloudFormation(properties.value),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnRegistryTagsEntryPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnRegistry.TagsEntryProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnRegistry.TagsEntryProperty>();\n    ret.addPropertyResult('key', 'Key', cfn_parse.FromCloudFormation.getString(properties.Key));\n    ret.addPropertyResult('value', 'Value', cfn_parse.FromCloudFormation.getString(properties.Value));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnRegistryPolicy`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registrypolicy.html\n */\nexport interface CfnRegistryPolicyProps {\n\n    /**\n     * A resource-based policy.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registrypolicy.html#cfn-eventschemas-registrypolicy-policy\n     */\n    readonly policy: any | cdk.IResolvable;\n\n    /**\n     * The name of the registry.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registrypolicy.html#cfn-eventschemas-registrypolicy-registryname\n     */\n    readonly registryName: string;\n\n    /**\n     * The revision ID of the policy.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registrypolicy.html#cfn-eventschemas-registrypolicy-revisionid\n     */\n    readonly revisionId?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnRegistryPolicyProps`\n *\n * @param properties - the TypeScript properties of a `CfnRegistryPolicyProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnRegistryPolicyPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('policy', cdk.requiredValidator)(properties.policy));\n    errors.collect(cdk.propertyValidator('policy', cdk.validateObject)(properties.policy));\n    errors.collect(cdk.propertyValidator('registryName', cdk.requiredValidator)(properties.registryName));\n    errors.collect(cdk.propertyValidator('registryName', cdk.validateString)(properties.registryName));\n    errors.collect(cdk.propertyValidator('revisionId', cdk.validateString)(properties.revisionId));\n    return errors.wrap('supplied properties not correct for \"CfnRegistryPolicyProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EventSchemas::RegistryPolicy` resource\n *\n * @param properties - the TypeScript properties of a `CfnRegistryPolicyProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EventSchemas::RegistryPolicy` resource.\n */\n// @ts-ignore TS6133\nfunction cfnRegistryPolicyPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnRegistryPolicyPropsValidator(properties).assertSuccess();\n    return {\n        Policy: cdk.objectToCloudFormation(properties.policy),\n        RegistryName: cdk.stringToCloudFormation(properties.registryName),\n        RevisionId: cdk.stringToCloudFormation(properties.revisionId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnRegistryPolicyPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnRegistryPolicyProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnRegistryPolicyProps>();\n    ret.addPropertyResult('policy', 'Policy', cfn_parse.FromCloudFormation.getAny(properties.Policy));\n    ret.addPropertyResult('registryName', 'RegistryName', cfn_parse.FromCloudFormation.getString(properties.RegistryName));\n    ret.addPropertyResult('revisionId', 'RevisionId', properties.RevisionId != null ? cfn_parse.FromCloudFormation.getString(properties.RevisionId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EventSchemas::RegistryPolicy`\n *\n * Use the `AWS::EventSchemas::RegistryPolicy` resource to specify resource-based policies for an EventBridge Schema Registry.\n *\n * @cloudformationResource AWS::EventSchemas::RegistryPolicy\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registrypolicy.html\n */\nexport class CfnRegistryPolicy extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EventSchemas::RegistryPolicy\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnRegistryPolicy {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnRegistryPolicyPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnRegistryPolicy(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ID of the policy.\n     * @cloudformationAttribute Id\n     */\n    public readonly attrId: string;\n\n    /**\n     * A resource-based policy.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registrypolicy.html#cfn-eventschemas-registrypolicy-policy\n     */\n    public policy: any | cdk.IResolvable;\n\n    /**\n     * The name of the registry.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registrypolicy.html#cfn-eventschemas-registrypolicy-registryname\n     */\n    public registryName: string;\n\n    /**\n     * The revision ID of the policy.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registrypolicy.html#cfn-eventschemas-registrypolicy-revisionid\n     */\n    public revisionId: string | undefined;\n\n    /**\n     * Create a new `AWS::EventSchemas::RegistryPolicy`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnRegistryPolicyProps) {\n        super(scope, id, { type: CfnRegistryPolicy.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'policy', this);\n        cdk.requireProperty(props, 'registryName', this);\n        this.attrId = cdk.Token.asString(this.getAtt('Id'));\n\n        this.policy = props.policy;\n        this.registryName = props.registryName;\n        this.revisionId = props.revisionId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnRegistryPolicy.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            policy: this.policy,\n            registryName: this.registryName,\n            revisionId: this.revisionId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnRegistryPolicyPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnSchema`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html\n */\nexport interface CfnSchemaProps {\n\n    /**\n     * The source of the schema definition.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html#cfn-eventschemas-schema-content\n     */\n    readonly content: string;\n\n    /**\n     * The name of the schema registry.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html#cfn-eventschemas-schema-registryname\n     */\n    readonly registryName: string;\n\n    /**\n     * The type of schema.\n     *\n     * Valid types include `OpenApi3` and `JSONSchemaDraft4` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html#cfn-eventschemas-schema-type\n     */\n    readonly type: string;\n\n    /**\n     * A description of the schema.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html#cfn-eventschemas-schema-description\n     */\n    readonly description?: string;\n\n    /**\n     * The name of the schema.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html#cfn-eventschemas-schema-schemaname\n     */\n    readonly schemaName?: string;\n\n    /**\n     * Tags associated with the schema.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html#cfn-eventschemas-schema-tags\n     */\n    readonly tags?: CfnSchema.TagsEntryProperty[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnSchemaProps`\n *\n * @param properties - the TypeScript properties of a `CfnSchemaProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnSchemaPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('content', cdk.requiredValidator)(properties.content));\n    errors.collect(cdk.propertyValidator('content', cdk.validateString)(properties.content));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('registryName', cdk.requiredValidator)(properties.registryName));\n    errors.collect(cdk.propertyValidator('registryName', cdk.validateString)(properties.registryName));\n    errors.collect(cdk.propertyValidator('schemaName', cdk.validateString)(properties.schemaName));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(CfnSchema_TagsEntryPropertyValidator))(properties.tags));\n    errors.collect(cdk.propertyValidator('type', cdk.requiredValidator)(properties.type));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    return errors.wrap('supplied properties not correct for \"CfnSchemaProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EventSchemas::Schema` resource\n *\n * @param properties - the TypeScript properties of a `CfnSchemaProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EventSchemas::Schema` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSchemaPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSchemaPropsValidator(properties).assertSuccess();\n    return {\n        Content: cdk.stringToCloudFormation(properties.content),\n        RegistryName: cdk.stringToCloudFormation(properties.registryName),\n        Type: cdk.stringToCloudFormation(properties.type),\n        Description: cdk.stringToCloudFormation(properties.description),\n        SchemaName: cdk.stringToCloudFormation(properties.schemaName),\n        Tags: cdk.listMapper(cfnSchemaTagsEntryPropertyToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSchemaPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSchemaProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSchemaProps>();\n    ret.addPropertyResult('content', 'Content', cfn_parse.FromCloudFormation.getString(properties.Content));\n    ret.addPropertyResult('registryName', 'RegistryName', cfn_parse.FromCloudFormation.getString(properties.RegistryName));\n    ret.addPropertyResult('type', 'Type', cfn_parse.FromCloudFormation.getString(properties.Type));\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('schemaName', 'SchemaName', properties.SchemaName != null ? cfn_parse.FromCloudFormation.getString(properties.SchemaName) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(CfnSchemaTagsEntryPropertyFromCloudFormation)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::EventSchemas::Schema`\n *\n * Use the `AWS::EventSchemas::Schema` resource to specify an event schema.\n *\n * @cloudformationResource AWS::EventSchemas::Schema\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html\n */\nexport class CfnSchema extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::EventSchemas::Schema\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnSchema {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnSchemaPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnSchema(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The ARN of the schema.\n     * @cloudformationAttribute SchemaArn\n     */\n    public readonly attrSchemaArn: string;\n\n    /**\n     * The name of the schema.\n     * @cloudformationAttribute SchemaName\n     */\n    public readonly attrSchemaName: string;\n\n    /**\n     * The version number of the schema.\n     * @cloudformationAttribute SchemaVersion\n     */\n    public readonly attrSchemaVersion: string;\n\n    /**\n     * The source of the schema definition.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html#cfn-eventschemas-schema-content\n     */\n    public content: string;\n\n    /**\n     * The name of the schema registry.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html#cfn-eventschemas-schema-registryname\n     */\n    public registryName: string;\n\n    /**\n     * The type of schema.\n     *\n     * Valid types include `OpenApi3` and `JSONSchemaDraft4` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html#cfn-eventschemas-schema-type\n     */\n    public type: string;\n\n    /**\n     * A description of the schema.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html#cfn-eventschemas-schema-description\n     */\n    public description: string | undefined;\n\n    /**\n     * The name of the schema.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html#cfn-eventschemas-schema-schemaname\n     */\n    public schemaName: string | undefined;\n\n    /**\n     * Tags associated with the schema.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html#cfn-eventschemas-schema-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::EventSchemas::Schema`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnSchemaProps) {\n        super(scope, id, { type: CfnSchema.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'content', this);\n        cdk.requireProperty(props, 'registryName', this);\n        cdk.requireProperty(props, 'type', this);\n        this.attrSchemaArn = cdk.Token.asString(this.getAtt('SchemaArn'));\n        this.attrSchemaName = cdk.Token.asString(this.getAtt('SchemaName'));\n        this.attrSchemaVersion = cdk.Token.asString(this.getAtt('SchemaVersion'));\n\n        this.content = props.content;\n        this.registryName = props.registryName;\n        this.type = props.type;\n        this.description = props.description;\n        this.schemaName = props.schemaName;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::EventSchemas::Schema\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnSchema.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            content: this.content,\n            registryName: this.registryName,\n            type: this.type,\n            description: this.description,\n            schemaName: this.schemaName,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnSchemaPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnSchema {\n    /**\n     * Tags to associate with the schema.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eventschemas-schema-tagsentry.html\n     */\n    export interface TagsEntryProperty {\n        /**\n         * They key of a key-value pair.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eventschemas-schema-tagsentry.html#cfn-eventschemas-schema-tagsentry-key\n         */\n        readonly key: string;\n        /**\n         * They value of a key-value pair.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eventschemas-schema-tagsentry.html#cfn-eventschemas-schema-tagsentry-value\n         */\n        readonly value: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TagsEntryProperty`\n *\n * @param properties - the TypeScript properties of a `TagsEntryProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSchema_TagsEntryPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('key', cdk.requiredValidator)(properties.key));\n    errors.collect(cdk.propertyValidator('key', cdk.validateString)(properties.key));\n    errors.collect(cdk.propertyValidator('value', cdk.requiredValidator)(properties.value));\n    errors.collect(cdk.propertyValidator('value', cdk.validateString)(properties.value));\n    return errors.wrap('supplied properties not correct for \"TagsEntryProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::EventSchemas::Schema.TagsEntry` resource\n *\n * @param properties - the TypeScript properties of a `TagsEntryProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::EventSchemas::Schema.TagsEntry` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSchemaTagsEntryPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSchema_TagsEntryPropertyValidator(properties).assertSuccess();\n    return {\n        Key: cdk.stringToCloudFormation(properties.key),\n        Value: cdk.stringToCloudFormation(properties.value),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSchemaTagsEntryPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSchema.TagsEntryProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSchema.TagsEntryProperty>();\n    ret.addPropertyResult('key', 'Key', cfn_parse.FromCloudFormation.getString(properties.Key));\n    ret.addPropertyResult('value', 'Value', cfn_parse.FromCloudFormation.getString(properties.Value));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n"],
  "mappings": "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",
  "names": []
}
