{
  "version": 3,
  "sources": ["integ.rule.lit.ts"],
  "sourcesContent": ["import * as targets from '../../aws-events-targets';\nimport * as lambda from '../../aws-lambda';\nimport * as sns from '../../aws-sns';\nimport * as cdk from '../../core';\nimport * as config from '../lib';\n\nconst app = new cdk.App();\n\nclass ConfigStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    /// !show\n    // A custom rule that runs on configuration changes of EC2 instances\n    const fn = new lambda.Function(this, 'CustomFunction', {\n      code: lambda.AssetCode.fromInline('exports.handler = (event) => console.log(event);'),\n      handler: 'index.handler',\n      runtime: lambda.Runtime.NODEJS_10_X,\n    });\n\n    new config.CustomRule(this, 'Custom', {\n      configurationChanges: true,\n      lambdaFunction: fn,\n      ruleScope: config.RuleScope.fromResources([config.ResourceType.EC2_INSTANCE]),\n    });\n\n    // A rule to detect stacks drifts\n    const driftRule = new config.CloudFormationStackDriftDetectionCheck(this, 'Drift');\n\n    // Topic for compliance events\n    const complianceTopic = new sns.Topic(this, 'ComplianceTopic');\n\n    // Send notification on compliance change\n    driftRule.onComplianceChange('ComplianceChange', {\n      target: new targets.SnsTopic(complianceTopic),\n    });\n    /// !hide\n  }\n}\n\nnew ConfigStack(app, 'aws-cdk-config-rule-integ');\napp.synth();\n"],
  "mappings": "oEAAA,KAAA,SAAA,QAAA,4BACA,OAAA,QAAA,oBACA,IAAA,QAAA,iBACA,IAAA,QAAA,cACA,OAAA,QAAA,UAEM,IAAM,GAAI,KAAI,IAEpB,yBAA0B,KAAI,KAAK,CACjC,YAAY,MAAgB,GAAY,MAAsB,CAC5D,MAAM,MAAO,GAAI,OAIjB,KAAM,IAAK,GAAI,QAAO,SAAS,KAAM,iBAAkB,CACrD,KAAM,OAAO,UAAU,WAAW,oDAClC,QAAS,gBACT,QAAS,OAAO,QAAQ,cAG1B,GAAI,QAAO,WAAW,KAAM,SAAU,CACpC,qBAAsB,GACtB,eAAgB,GAChB,UAAW,OAAO,UAAU,cAAc,CAAC,OAAO,aAAa,iBAIjE,KAAM,WAAY,GAAI,QAAO,uCAAuC,KAAM,SAGpE,gBAAkB,GAAI,KAAI,MAAM,KAAM,mBAG5C,UAAU,mBAAmB,mBAAoB,CAC/C,OAAQ,GAAI,SAAQ,SAAS,oBAMnC,GAAI,aAAY,IAAK,6BACrB,IAAI",
  "names": []
}
