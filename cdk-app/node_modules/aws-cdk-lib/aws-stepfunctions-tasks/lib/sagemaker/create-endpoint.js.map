{
  "version": 3,
  "sources": ["create-endpoint.ts"],
  "sourcesContent": ["import * as iam from '../../../aws-iam';\nimport * as sfn from '../../../aws-stepfunctions';\nimport * as cdk from '../../../core';\nimport { Construct } from 'constructs';\nimport { integrationResourceArn, validatePatternSupported } from '../private/task-utils';\n\n/**\n * Properties for creating an Amazon SageMaker endpoint\n *\n * @see https://docs.aws.amazon.com/step-functions/latest/dg/connect-sagemaker.html\n */\nexport interface SageMakerCreateEndpointProps extends sfn.TaskStateBaseProps {\n  /**\n   * The name of an endpoint configuration.\n   */\n  readonly endpointConfigName: string;\n  /**\n   * The name of the endpoint. The name must be unique within an AWS Region in your AWS account.\n   */\n  readonly endpointName: string;\n  /**\n   * Tags to be applied to the endpoint.\n   *\n   * @default - No tags\n   */\n  readonly tags?: sfn.TaskInput;\n}\n\n/**\n * A Step Functions Task to create a SageMaker endpoint\n *\n * @see https://docs.aws.amazon.com/step-functions/latest/dg/connect-sagemaker.html\n */\nexport class SageMakerCreateEndpoint extends sfn.TaskStateBase {\n  private static readonly SUPPORTED_INTEGRATION_PATTERNS: sfn.IntegrationPattern[] = [\n    sfn.IntegrationPattern.REQUEST_RESPONSE,\n  ];\n  protected readonly taskMetrics?: sfn.TaskMetricsConfig;\n  protected readonly taskPolicies?: iam.PolicyStatement[];\n  private readonly integrationPattern: sfn.IntegrationPattern;\n\n  constructor(scope: Construct, id: string, private readonly props: SageMakerCreateEndpointProps) {\n    super(scope, id, props);\n    this.integrationPattern = props.integrationPattern || sfn.IntegrationPattern.REQUEST_RESPONSE;\n    validatePatternSupported(this.integrationPattern, SageMakerCreateEndpoint.SUPPORTED_INTEGRATION_PATTERNS);\n    this.taskPolicies = this.makePolicyStatements();\n  }\n\n  /**\n   * @internal\n   */\n  protected _renderTask(): any {\n    return {\n      Resource: integrationResourceArn('sagemaker', 'createEndpoint', this.integrationPattern),\n      Parameters: sfn.FieldUtils.renderObject(this.renderParameters()),\n    };\n  }\n\n  private renderParameters(): { [key: string]: any } {\n    return {\n      EndpointConfigName: this.props.endpointConfigName,\n      EndpointName: this.props.endpointName,\n      Tags: this.props.tags?.value,\n    };\n  }\n\n  private makePolicyStatements(): iam.PolicyStatement[] {\n    const stack = cdk.Stack.of(this);\n    // https://docs.aws.amazon.com/sagemaker/latest/dg/api-permissions-reference.html\n    return [\n      new iam.PolicyStatement({\n        actions: ['sagemaker:createEndpoint'],\n        resources: [\n          stack.formatArn({\n            service: 'sagemaker',\n            resource: 'endpoint',\n            // If the endpoint name comes from input, we cannot target the policy to a particular ARN prefix reliably.\n            // SageMaker uses lowercase for resource name in the arn\n            resourceName: sfn.JsonPath.isEncodedJsonPath(this.props.endpointName) ? '*' : `${this.props.endpointName.toLowerCase()}`,\n          }),\n          stack.formatArn({\n            service: 'sagemaker',\n            resource: 'endpoint-config',\n            // If the endpoint config name comes from input, we cannot target the policy to a particular ARN prefix reliably.\n            // SageMaker uses lowercase for resource name in the arn\n            resourceName: sfn.JsonPath.isEncodedJsonPath(this.props.endpointConfigName) ? '*' : `${this.props.endpointConfigName.toLowerCase()}`,\n          }),\n        ],\n      }),\n      new iam.PolicyStatement({\n        actions: ['sagemaker:ListTags'],\n        // https://docs.aws.amazon.com/step-functions/latest/dg/sagemaker-iam.html\n        resources: ['*'],\n      }),\n    ];\n  }\n}"],
  "mappings": "iOAAA,IAAA,QAAA,oBACA,IAAA,QAAA,8BACA,IAAA,QAAA,iBAEA,aAAA,QAAA,yBA6BA,qCAA6C,KAAI,aAAa,CAQ5D,YAAY,MAAkB,GAA6B,MAAmC,CAC5F,MAAM,MAAO,GAAI,OADwC,KAAA,MAAA,sGAEzD,KAAK,mBAAqB,MAAM,oBAAsB,IAAI,mBAAmB,iBAC7E,aAAA,yBAAyB,KAAK,mBAAoB,wBAAwB,gCAC1E,KAAK,aAAe,KAAK,uBAMjB,aAAW,CACnB,MAAO,CACL,SAAU,aAAA,uBAAuB,YAAa,iBAAkB,KAAK,oBACrE,WAAY,IAAI,WAAW,aAAa,KAAK,qBAIzC,kBAAgB,QACtB,MAAO,CACL,mBAAoB,KAAK,MAAM,mBAC/B,aAAc,KAAK,MAAM,aACzB,KAAI,IAAE,KAAK,MAAM,QAAI,MAAA,KAAA,OAAA,OAAA,GAAE,OAInB,sBAAoB,CAC1B,KAAM,OAAQ,IAAI,MAAM,GAAG,MAE3B,MAAO,CACL,GAAI,KAAI,gBAAgB,CACtB,QAAS,CAAC,4BACV,UAAW,CACT,MAAM,UAAU,CACd,QAAS,YACT,SAAU,WAGV,aAAc,IAAI,SAAS,kBAAkB,KAAK,MAAM,cAAgB,IAAM,GAAG,KAAK,MAAM,aAAa,kBAE3G,MAAM,UAAU,CACd,QAAS,YACT,SAAU,kBAGV,aAAc,IAAI,SAAS,kBAAkB,KAAK,MAAM,oBAAsB,IAAM,GAAG,KAAK,MAAM,mBAAmB,qBAI3H,GAAI,KAAI,gBAAgB,CACtB,QAAS,CAAC,sBAEV,UAAW,CAAC,SA3DpB,QAAA,wBAAA,+JAC0B,wBAAA,+BAA2D,CACjF,IAAI,mBAAmB",
  "names": []
}
