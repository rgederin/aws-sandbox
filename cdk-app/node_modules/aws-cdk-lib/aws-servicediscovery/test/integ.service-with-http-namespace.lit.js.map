{
  "version": 3,
  "sources": ["integ.service-with-http-namespace.lit.ts"],
  "sourcesContent": ["import * as cdk from '../../core';\nimport * as servicediscovery from '../lib';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-servicediscovery-integ');\n\nconst namespace = new servicediscovery.HttpNamespace(stack, 'MyNamespace', {\n  name: 'covfefe',\n});\n\nconst service1 = namespace.createService('NonIpService', {\n  description: 'service registering non-ip instances',\n});\n\nservice1.registerNonIpInstance('NonIpInstance', {\n  customAttributes: { arn: 'arn:aws:s3:::mybucket' },\n});\n\nconst service2 = namespace.createService('IpService', {\n  description: 'service registering ip instances',\n  healthCheck: {\n    type: servicediscovery.HealthCheckType.HTTP,\n    resourcePath: '/check',\n  },\n});\n\nservice2.registerIpInstance('IpInstance', {\n  ipv4: '54.239.25.192',\n});\n\napp.synth();\n"],
  "mappings": "oEAAA,KAAA,KAAA,QAAA,cACA,iBAAA,QAAA,UAEM,IAAM,GAAI,KAAI,IACd,MAAQ,GAAI,KAAI,MAAM,IAAK,8BAE3B,UAAY,GAAI,kBAAiB,cAAc,MAAO,cAAe,CACzE,KAAM,YAGF,SAAW,UAAU,cAAc,eAAgB,CACvD,YAAa,yCAGf,SAAS,sBAAsB,gBAAiB,CAC9C,iBAAkB,CAAE,IAAK,2BAG3B,KAAM,UAAW,UAAU,cAAc,YAAa,CACpD,YAAa,mCACb,YAAa,CACX,KAAM,iBAAiB,gBAAgB,KACvC,aAAc,YAIlB,SAAS,mBAAmB,aAAc,CACxC,KAAM,kBAGR,IAAI",
  "names": []
}
