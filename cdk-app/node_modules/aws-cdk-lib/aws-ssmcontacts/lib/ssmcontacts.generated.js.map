{
  "version": 3,
  "sources": ["ssmcontacts.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-03-01T02:10:10.071Z\",\"fingerprint\":\"E4WFQOLLdyKo8gUxQlb6ii6flXzeEXNp8oVRoxuk5U0=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n/**\n * Properties for defining a `CfnContact`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contact.html\n */\nexport interface CfnContactProps {\n\n    /**\n     * The unique and identifiable alias of the contact or escalation plan.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contact.html#cfn-ssmcontacts-contact-alias\n     */\n    readonly alias: string;\n\n    /**\n     * The full name of the contact or escalation plan.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contact.html#cfn-ssmcontacts-contact-displayname\n     */\n    readonly displayName: string;\n\n    /**\n     * A list of stages. A contact has an engagement plan with stages that contact specified contact channels. An escalation plan uses stages that contact specified contacts.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contact.html#cfn-ssmcontacts-contact-plan\n     */\n    readonly plan: Array<CfnContact.StageProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * Refers to the type of contact. A single contact is type `PERSONAL` and an escalation plan is type `ESCALATION` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contact.html#cfn-ssmcontacts-contact-type\n     */\n    readonly type: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnContactProps`\n *\n * @param properties - the TypeScript properties of a `CfnContactProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnContactPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('alias', cdk.requiredValidator)(properties.alias));\n    errors.collect(cdk.propertyValidator('alias', cdk.validateString)(properties.alias));\n    errors.collect(cdk.propertyValidator('displayName', cdk.requiredValidator)(properties.displayName));\n    errors.collect(cdk.propertyValidator('displayName', cdk.validateString)(properties.displayName));\n    errors.collect(cdk.propertyValidator('plan', cdk.requiredValidator)(properties.plan));\n    errors.collect(cdk.propertyValidator('plan', cdk.listValidator(CfnContact_StagePropertyValidator))(properties.plan));\n    errors.collect(cdk.propertyValidator('type', cdk.requiredValidator)(properties.type));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    return errors.wrap('supplied properties not correct for \"CfnContactProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::SSMContacts::Contact` resource\n *\n * @param properties - the TypeScript properties of a `CfnContactProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::SSMContacts::Contact` resource.\n */\n// @ts-ignore TS6133\nfunction cfnContactPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnContactPropsValidator(properties).assertSuccess();\n    return {\n        Alias: cdk.stringToCloudFormation(properties.alias),\n        DisplayName: cdk.stringToCloudFormation(properties.displayName),\n        Plan: cdk.listMapper(cfnContactStagePropertyToCloudFormation)(properties.plan),\n        Type: cdk.stringToCloudFormation(properties.type),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnContactPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnContactProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnContactProps>();\n    ret.addPropertyResult('alias', 'Alias', cfn_parse.FromCloudFormation.getString(properties.Alias));\n    ret.addPropertyResult('displayName', 'DisplayName', cfn_parse.FromCloudFormation.getString(properties.DisplayName));\n    ret.addPropertyResult('plan', 'Plan', cfn_parse.FromCloudFormation.getArray(CfnContactStagePropertyFromCloudFormation)(properties.Plan));\n    ret.addPropertyResult('type', 'Type', cfn_parse.FromCloudFormation.getString(properties.Type));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::SSMContacts::Contact`\n *\n * The `AWS::SSMContacts::Contact` resource specifies a contact or escalation plan. Incident Manager contacts are a subset of actions and data types that you can use for managing responder engagement and interaction.\n *\n * @cloudformationResource AWS::SSMContacts::Contact\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contact.html\n */\nexport class CfnContact extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::SSMContacts::Contact\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnContact {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnContactPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnContact(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The Amazon Resource Name (ARN) of the `Contact` resource, such as `arn:aws:ssm-contacts:us-west-2:123456789012:contact/contactalias` .\n     * @cloudformationAttribute Arn\n     */\n    public readonly attrArn: string;\n\n    /**\n     * The unique and identifiable alias of the contact or escalation plan.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contact.html#cfn-ssmcontacts-contact-alias\n     */\n    public alias: string;\n\n    /**\n     * The full name of the contact or escalation plan.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contact.html#cfn-ssmcontacts-contact-displayname\n     */\n    public displayName: string;\n\n    /**\n     * A list of stages. A contact has an engagement plan with stages that contact specified contact channels. An escalation plan uses stages that contact specified contacts.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contact.html#cfn-ssmcontacts-contact-plan\n     */\n    public plan: Array<CfnContact.StageProperty | cdk.IResolvable> | cdk.IResolvable;\n\n    /**\n     * Refers to the type of contact. A single contact is type `PERSONAL` and an escalation plan is type `ESCALATION` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contact.html#cfn-ssmcontacts-contact-type\n     */\n    public type: string;\n\n    /**\n     * Create a new `AWS::SSMContacts::Contact`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnContactProps) {\n        super(scope, id, { type: CfnContact.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'alias', this);\n        cdk.requireProperty(props, 'displayName', this);\n        cdk.requireProperty(props, 'plan', this);\n        cdk.requireProperty(props, 'type', this);\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n\n        this.alias = props.alias;\n        this.displayName = props.displayName;\n        this.plan = props.plan;\n        this.type = props.type;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnContact.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            alias: this.alias,\n            displayName: this.displayName,\n            plan: this.plan,\n            type: this.type,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnContactPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnContact {\n    /**\n     * Information about the contact channel that Incident Manager uses to engage the contact.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssmcontacts-contact-channeltargetinfo.html\n     */\n    export interface ChannelTargetInfoProperty {\n        /**\n         * The Amazon Resource Name (ARN) of the contact channel.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssmcontacts-contact-channeltargetinfo.html#cfn-ssmcontacts-contact-channeltargetinfo-channelid\n         */\n        readonly channelId: string;\n        /**\n         * The number of minutes to wait to retry sending engagement in the case the engagement initially fails.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssmcontacts-contact-channeltargetinfo.html#cfn-ssmcontacts-contact-channeltargetinfo-retryintervalinminutes\n         */\n        readonly retryIntervalInMinutes: number;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ChannelTargetInfoProperty`\n *\n * @param properties - the TypeScript properties of a `ChannelTargetInfoProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnContact_ChannelTargetInfoPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('channelId', cdk.requiredValidator)(properties.channelId));\n    errors.collect(cdk.propertyValidator('channelId', cdk.validateString)(properties.channelId));\n    errors.collect(cdk.propertyValidator('retryIntervalInMinutes', cdk.requiredValidator)(properties.retryIntervalInMinutes));\n    errors.collect(cdk.propertyValidator('retryIntervalInMinutes', cdk.validateNumber)(properties.retryIntervalInMinutes));\n    return errors.wrap('supplied properties not correct for \"ChannelTargetInfoProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::SSMContacts::Contact.ChannelTargetInfo` resource\n *\n * @param properties - the TypeScript properties of a `ChannelTargetInfoProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::SSMContacts::Contact.ChannelTargetInfo` resource.\n */\n// @ts-ignore TS6133\nfunction cfnContactChannelTargetInfoPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnContact_ChannelTargetInfoPropertyValidator(properties).assertSuccess();\n    return {\n        ChannelId: cdk.stringToCloudFormation(properties.channelId),\n        RetryIntervalInMinutes: cdk.numberToCloudFormation(properties.retryIntervalInMinutes),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnContactChannelTargetInfoPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnContact.ChannelTargetInfoProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnContact.ChannelTargetInfoProperty>();\n    ret.addPropertyResult('channelId', 'ChannelId', cfn_parse.FromCloudFormation.getString(properties.ChannelId));\n    ret.addPropertyResult('retryIntervalInMinutes', 'RetryIntervalInMinutes', cfn_parse.FromCloudFormation.getNumber(properties.RetryIntervalInMinutes));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnContact {\n    /**\n     * The contact that Incident Manager is engaging during an incident.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssmcontacts-contact-contacttargetinfo.html\n     */\n    export interface ContactTargetInfoProperty {\n        /**\n         * The Amazon Resource Name (ARN) of the contact.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssmcontacts-contact-contacttargetinfo.html#cfn-ssmcontacts-contact-contacttargetinfo-contactid\n         */\n        readonly contactId: string;\n        /**\n         * A Boolean value determining if the contact's acknowledgement stops the progress of stages in the plan.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssmcontacts-contact-contacttargetinfo.html#cfn-ssmcontacts-contact-contacttargetinfo-isessential\n         */\n        readonly isEssential: boolean | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ContactTargetInfoProperty`\n *\n * @param properties - the TypeScript properties of a `ContactTargetInfoProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnContact_ContactTargetInfoPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('contactId', cdk.requiredValidator)(properties.contactId));\n    errors.collect(cdk.propertyValidator('contactId', cdk.validateString)(properties.contactId));\n    errors.collect(cdk.propertyValidator('isEssential', cdk.requiredValidator)(properties.isEssential));\n    errors.collect(cdk.propertyValidator('isEssential', cdk.validateBoolean)(properties.isEssential));\n    return errors.wrap('supplied properties not correct for \"ContactTargetInfoProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::SSMContacts::Contact.ContactTargetInfo` resource\n *\n * @param properties - the TypeScript properties of a `ContactTargetInfoProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::SSMContacts::Contact.ContactTargetInfo` resource.\n */\n// @ts-ignore TS6133\nfunction cfnContactContactTargetInfoPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnContact_ContactTargetInfoPropertyValidator(properties).assertSuccess();\n    return {\n        ContactId: cdk.stringToCloudFormation(properties.contactId),\n        IsEssential: cdk.booleanToCloudFormation(properties.isEssential),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnContactContactTargetInfoPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnContact.ContactTargetInfoProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnContact.ContactTargetInfoProperty>();\n    ret.addPropertyResult('contactId', 'ContactId', cfn_parse.FromCloudFormation.getString(properties.ContactId));\n    ret.addPropertyResult('isEssential', 'IsEssential', cfn_parse.FromCloudFormation.getBoolean(properties.IsEssential));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnContact {\n    /**\n     * The `Stage` property type specifies a set amount of time that an escalation plan or engagement plan engages the specified contacts or contact methods.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssmcontacts-contact-stage.html\n     */\n    export interface StageProperty {\n        /**\n         * The time to wait until beginning the next stage. The duration can only be set to 0 if a target is specified.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssmcontacts-contact-stage.html#cfn-ssmcontacts-contact-stage-durationinminutes\n         */\n        readonly durationInMinutes: number;\n        /**\n         * The contacts or contact methods that the escalation plan or engagement plan is engaging.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssmcontacts-contact-stage.html#cfn-ssmcontacts-contact-stage-targets\n         */\n        readonly targets?: Array<CfnContact.TargetsProperty | cdk.IResolvable> | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `StageProperty`\n *\n * @param properties - the TypeScript properties of a `StageProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnContact_StagePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('durationInMinutes', cdk.requiredValidator)(properties.durationInMinutes));\n    errors.collect(cdk.propertyValidator('durationInMinutes', cdk.validateNumber)(properties.durationInMinutes));\n    errors.collect(cdk.propertyValidator('targets', cdk.listValidator(CfnContact_TargetsPropertyValidator))(properties.targets));\n    return errors.wrap('supplied properties not correct for \"StageProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::SSMContacts::Contact.Stage` resource\n *\n * @param properties - the TypeScript properties of a `StageProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::SSMContacts::Contact.Stage` resource.\n */\n// @ts-ignore TS6133\nfunction cfnContactStagePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnContact_StagePropertyValidator(properties).assertSuccess();\n    return {\n        DurationInMinutes: cdk.numberToCloudFormation(properties.durationInMinutes),\n        Targets: cdk.listMapper(cfnContactTargetsPropertyToCloudFormation)(properties.targets),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnContactStagePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnContact.StageProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnContact.StageProperty>();\n    ret.addPropertyResult('durationInMinutes', 'DurationInMinutes', cfn_parse.FromCloudFormation.getNumber(properties.DurationInMinutes));\n    ret.addPropertyResult('targets', 'Targets', properties.Targets != null ? cfn_parse.FromCloudFormation.getArray(CfnContactTargetsPropertyFromCloudFormation)(properties.Targets) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnContact {\n    /**\n     * The contact or contact channel that's being engaged.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssmcontacts-contact-targets.html\n     */\n    export interface TargetsProperty {\n        /**\n         * Information about the contact channel Incident Manager is engaging.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssmcontacts-contact-targets.html#cfn-ssmcontacts-contact-targets-channeltargetinfo\n         */\n        readonly channelTargetInfo?: CfnContact.ChannelTargetInfoProperty | cdk.IResolvable;\n        /**\n         * The contact that Incident Manager is engaging during an incident.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssmcontacts-contact-targets.html#cfn-ssmcontacts-contact-targets-contacttargetinfo\n         */\n        readonly contactTargetInfo?: CfnContact.ContactTargetInfoProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `TargetsProperty`\n *\n * @param properties - the TypeScript properties of a `TargetsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnContact_TargetsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('channelTargetInfo', CfnContact_ChannelTargetInfoPropertyValidator)(properties.channelTargetInfo));\n    errors.collect(cdk.propertyValidator('contactTargetInfo', CfnContact_ContactTargetInfoPropertyValidator)(properties.contactTargetInfo));\n    return errors.wrap('supplied properties not correct for \"TargetsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::SSMContacts::Contact.Targets` resource\n *\n * @param properties - the TypeScript properties of a `TargetsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::SSMContacts::Contact.Targets` resource.\n */\n// @ts-ignore TS6133\nfunction cfnContactTargetsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnContact_TargetsPropertyValidator(properties).assertSuccess();\n    return {\n        ChannelTargetInfo: cfnContactChannelTargetInfoPropertyToCloudFormation(properties.channelTargetInfo),\n        ContactTargetInfo: cfnContactContactTargetInfoPropertyToCloudFormation(properties.contactTargetInfo),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnContactTargetsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnContact.TargetsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnContact.TargetsProperty>();\n    ret.addPropertyResult('channelTargetInfo', 'ChannelTargetInfo', properties.ChannelTargetInfo != null ? CfnContactChannelTargetInfoPropertyFromCloudFormation(properties.ChannelTargetInfo) : undefined);\n    ret.addPropertyResult('contactTargetInfo', 'ContactTargetInfo', properties.ContactTargetInfo != null ? CfnContactContactTargetInfoPropertyFromCloudFormation(properties.ContactTargetInfo) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnContactChannel`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html\n */\nexport interface CfnContactChannelProps {\n\n    /**\n     * The details that Incident Manager uses when trying to engage the contact channel.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-channeladdress\n     */\n    readonly channelAddress: string;\n\n    /**\n     * The name of the contact channel.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-channelname\n     */\n    readonly channelName: string;\n\n    /**\n     * The type of the contact channel. Incident Manager supports three contact methods:\n     *\n     * - SMS\n     * - VOICE\n     * - EMAIL\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-channeltype\n     */\n    readonly channelType: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of the contact you are adding the contact channel to.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-contactid\n     */\n    readonly contactId: string;\n\n    /**\n     * If you want to activate the channel at a later time, you can choose to defer activation. Incident Manager can't engage your contact channel until it has been activated.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-deferactivation\n     */\n    readonly deferActivation?: boolean | cdk.IResolvable;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnContactChannelProps`\n *\n * @param properties - the TypeScript properties of a `CfnContactChannelProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnContactChannelPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('channelAddress', cdk.requiredValidator)(properties.channelAddress));\n    errors.collect(cdk.propertyValidator('channelAddress', cdk.validateString)(properties.channelAddress));\n    errors.collect(cdk.propertyValidator('channelName', cdk.requiredValidator)(properties.channelName));\n    errors.collect(cdk.propertyValidator('channelName', cdk.validateString)(properties.channelName));\n    errors.collect(cdk.propertyValidator('channelType', cdk.requiredValidator)(properties.channelType));\n    errors.collect(cdk.propertyValidator('channelType', cdk.validateString)(properties.channelType));\n    errors.collect(cdk.propertyValidator('contactId', cdk.requiredValidator)(properties.contactId));\n    errors.collect(cdk.propertyValidator('contactId', cdk.validateString)(properties.contactId));\n    errors.collect(cdk.propertyValidator('deferActivation', cdk.validateBoolean)(properties.deferActivation));\n    return errors.wrap('supplied properties not correct for \"CfnContactChannelProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::SSMContacts::ContactChannel` resource\n *\n * @param properties - the TypeScript properties of a `CfnContactChannelProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::SSMContacts::ContactChannel` resource.\n */\n// @ts-ignore TS6133\nfunction cfnContactChannelPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnContactChannelPropsValidator(properties).assertSuccess();\n    return {\n        ChannelAddress: cdk.stringToCloudFormation(properties.channelAddress),\n        ChannelName: cdk.stringToCloudFormation(properties.channelName),\n        ChannelType: cdk.stringToCloudFormation(properties.channelType),\n        ContactId: cdk.stringToCloudFormation(properties.contactId),\n        DeferActivation: cdk.booleanToCloudFormation(properties.deferActivation),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnContactChannelPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnContactChannelProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnContactChannelProps>();\n    ret.addPropertyResult('channelAddress', 'ChannelAddress', cfn_parse.FromCloudFormation.getString(properties.ChannelAddress));\n    ret.addPropertyResult('channelName', 'ChannelName', cfn_parse.FromCloudFormation.getString(properties.ChannelName));\n    ret.addPropertyResult('channelType', 'ChannelType', cfn_parse.FromCloudFormation.getString(properties.ChannelType));\n    ret.addPropertyResult('contactId', 'ContactId', cfn_parse.FromCloudFormation.getString(properties.ContactId));\n    ret.addPropertyResult('deferActivation', 'DeferActivation', properties.DeferActivation != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DeferActivation) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::SSMContacts::ContactChannel`\n *\n * The `AWS::SSMContacts::ContactChannel` resource specifies a contact channel as the method that Incident Manager uses to engage your contact.\n *\n * @cloudformationResource AWS::SSMContacts::ContactChannel\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html\n */\nexport class CfnContactChannel extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::SSMContacts::ContactChannel\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnContactChannel {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnContactChannelPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnContactChannel(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The Amazon Resource Name (ARN) of the `ContactChannel` resource.\n     * @cloudformationAttribute Arn\n     */\n    public readonly attrArn: string;\n\n    /**\n     * The details that Incident Manager uses when trying to engage the contact channel.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-channeladdress\n     */\n    public channelAddress: string;\n\n    /**\n     * The name of the contact channel.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-channelname\n     */\n    public channelName: string;\n\n    /**\n     * The type of the contact channel. Incident Manager supports three contact methods:\n     *\n     * - SMS\n     * - VOICE\n     * - EMAIL\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-channeltype\n     */\n    public channelType: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of the contact you are adding the contact channel to.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-contactid\n     */\n    public contactId: string;\n\n    /**\n     * If you want to activate the channel at a later time, you can choose to defer activation. Incident Manager can't engage your contact channel until it has been activated.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-deferactivation\n     */\n    public deferActivation: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * Create a new `AWS::SSMContacts::ContactChannel`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnContactChannelProps) {\n        super(scope, id, { type: CfnContactChannel.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'channelAddress', this);\n        cdk.requireProperty(props, 'channelName', this);\n        cdk.requireProperty(props, 'channelType', this);\n        cdk.requireProperty(props, 'contactId', this);\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n\n        this.channelAddress = props.channelAddress;\n        this.channelName = props.channelName;\n        this.channelType = props.channelType;\n        this.contactId = props.contactId;\n        this.deferActivation = props.deferActivation;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnContactChannel.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            channelAddress: this.channelAddress,\n            channelName: this.channelName,\n            channelType: this.channelType,\n            contactId: this.contactId,\n            deferActivation: this.deferActivation,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnContactChannelPropsToCloudFormation(props);\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
