{
  "version": 3,
  "sources": ["code.ts"],
  "sourcesContent": ["import * as fs from 'fs';\nimport * as path from 'path';\nimport * as assets from '../../aws-s3-assets';\nimport { Construct } from 'constructs';\nimport { CfnRepository } from './codecommit.generated';\n\n/**\n * Represents the structure to pass into the underlying CfnRepository class.\n */\nexport interface CodeConfig {\n  /**\n   * represents the underlying code structure\n   */\n  readonly code: CfnRepository.CodeProperty;\n}\n\n/**\n * Represents the contents to initialize the repository with.\n */\nexport abstract class Code {\n  /**\n   * Code from directory.\n   * @param directoryPath the path to the local directory containing the contents to initialize the repository with\n   * @param branch the name of the branch to create in the repository. Default is \"main\"\n   */\n  public static fromDirectory(directoryPath: string, branch?: string): Code {\n    const resolvedPath = path.resolve(directoryPath);\n\n    const statResult = fs.statSync(resolvedPath);\n    if (!statResult || !statResult.isDirectory()) {\n      throw new Error(`'${directoryPath}' needs to be a path to a directory (resolved to: '${resolvedPath }')`);\n    }\n\n    return new PathResolvedCode(resolvedPath, branch);\n  }\n\n  /**\n   * Code from preexisting ZIP file.\n   * @param filePath the path to the local ZIP file containing the contents to initialize the repository with\n   * @param branch the name of the branch to create in the repository. Default is \"main\"\n   */\n  public static fromZipFile(filePath: string, branch?: string): Code {\n    const resolvedPath = path.resolve(filePath);\n\n    const statResult = fs.statSync(resolvedPath);\n    if (!statResult || !statResult.isFile()) {\n      throw new Error(`'${filePath}' needs to be a path to a ZIP file (resolved to: '${resolvedPath }')`);\n    }\n\n    return new PathResolvedCode(resolvedPath, branch);\n  }\n\n  /**\n   * Code from user-supplied asset.\n   * @param asset pre-existing asset\n   * @param branch the name of the branch to create in the repository. Default is \"main\"\n   */\n  public static fromAsset(asset: assets.Asset, branch?: string): Code {\n    return new AssetCode(asset, branch);\n  }\n\n  /**\n   * This method is called after a repository is passed this instance of Code in its 'code' property.\n   *\n   * @param scope the binding scope\n   */\n  public abstract bind(scope: Construct): CodeConfig;\n}\n\nclass PathResolvedCode extends Code {\n  constructor(private readonly resolvedPath: string, private readonly branch?: string) {\n    super();\n  }\n\n  public bind(scope: Construct): CodeConfig {\n    const asset = new assets.Asset(scope, 'PathResolvedCodeAsset', {\n      path: this.resolvedPath,\n    });\n\n    return (new AssetCode(asset, this.branch)).bind(scope);\n  }\n}\n\nclass AssetCode extends Code {\n  constructor(private readonly asset: assets.Asset, private readonly branch?: string) {\n    super();\n  }\n\n  public bind(_scope: Construct): CodeConfig {\n    if (!this.asset.isZipArchive) {\n      throw new Error('Asset must be a .zip file or a directory (resolved to: ' + this.asset.assetPath + ' )');\n    }\n\n    return {\n      code: {\n        branchName: this.branch,\n        s3: {\n          bucket: this.asset.s3BucketName,\n          key: this.asset.s3ObjectKey,\n        },\n      },\n    };\n  }\n}"],
  "mappings": "2MAAA,GAAA,QAAA,MACA,KAAA,QAAA,QACA,OAAA,QAAA,uBAiBA,UAA0B,OAMV,eAAc,cAAuB,OAAe,CAChE,KAAM,cAAe,KAAK,QAAQ,eAE5B,WAAa,GAAG,SAAS,cAC/B,GAAI,CAAC,YAAc,CAAC,WAAW,cAC7B,KAAM,IAAI,OAAM,IAAI,mEAAmE,kBAGzF,MAAO,IAAI,kBAAiB,aAAc,cAQ9B,aAAY,SAAkB,OAAe,CACzD,KAAM,cAAe,KAAK,QAAQ,UAE5B,WAAa,GAAG,SAAS,cAC/B,GAAI,CAAC,YAAc,CAAC,WAAW,SAC7B,KAAM,IAAI,OAAM,IAAI,6DAA6D,kBAGnF,MAAO,IAAI,kBAAiB,aAAc,cAQ9B,WAAU,MAAqB,OAAe,uEACnD,GAAI,WAAU,MAAO,SAvChC,QAAA,KAAA,6FAkDA,8BAA+B,KAAI,CACjC,YAA6B,aAAuC,OAAe,CACjF,QAD2B,KAAA,aAAA,aAAuC,KAAA,OAAA,OAI7D,KAAK,MAAgB,CAC1B,KAAM,OAAQ,GAAI,QAAO,MAAM,MAAO,wBAAyB,CAC7D,KAAM,KAAK,eAGb,MAAQ,IAAI,WAAU,MAAO,KAAK,QAAS,KAAK,QAIpD,uBAAwB,KAAI,CAC1B,YAA6B,MAAsC,OAAe,CAChF,QAD2B,KAAA,MAAA,MAAsC,KAAA,OAAA,OAI5D,KAAK,OAAiB,CAC3B,GAAI,CAAC,KAAK,MAAM,aACd,KAAM,IAAI,OAAM,0DAA4D,KAAK,MAAM,UAAY,MAGrG,MAAO,CACL,KAAM,CACJ,WAAY,KAAK,OACjB,GAAI,CACF,OAAQ,KAAK,MAAM,aACnB,IAAK,KAAK,MAAM",
  "names": []
}
