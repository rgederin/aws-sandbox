{
  "version": 3,
  "sources": ["subscription-filter.ts"],
  "sourcesContent": ["/**\n * Conditions that can be applied to string attributes.\n */\nexport interface StringConditions {\n  /**\n   * Match one or more values.\n   *\n   * @deprecated use `allowlist`\n   * @default - None\n   */\n  readonly whitelist?: string[];\n\n  /**\n   * Match any value that doesn't include any of the specified values.\n   * @deprecated use `denylist`\n   * @default - None\n   */\n  readonly blacklist?: string[];\n\n  /**\n   * Match one or more values.\n   * @default - None\n   */\n  readonly allowlist?: string[];\n\n  /**\n   * Match any value that doesn't include any of the specified values.\n   * @default - None\n   */\n  readonly denylist?: string[];\n\n  /**\n   * Matches values that begins with the specified prefixes.\n   *\n   * @default - None\n   */\n  readonly matchPrefixes?: string[];\n}\n\n/**\n * Between condition for a numeric attribute.\n */\nexport interface BetweenCondition {\n  /**\n   * The start value.\n   */\n  readonly start: number;\n\n  /**\n   * The stop value.\n   */\n  readonly stop: number;\n}\n\n/**\n * Conditions that can be applied to numeric attributes.\n */\nexport interface NumericConditions {\n  /**\n   * Match one or more values.\n   * @deprecated use `allowlist`\n   * @default - None\n   */\n  readonly whitelist?: number[];\n\n  /**\n   * Match one or more values.\n   *\n   * @default - None\n   */\n  readonly allowlist?: number[];\n\n  /**\n   * Match values that are greater than the specified value.\n   *\n   * @default - None\n   */\n  readonly greaterThan?: number;\n\n  /**\n   * Match values that are greater than or equal to the specified value.\n   *\n   * @default - None\n   */\n  readonly greaterThanOrEqualTo?: number;\n\n  /**\n   * Match values that are less than the specified value.\n   *\n   * @default - None\n   */\n  readonly lessThan?: number;\n\n  /**\n   * Match values that are less than or equal to the specified value.\n   *\n   * @default - None\n   */\n  readonly lessThanOrEqualTo?: number;\n\n  /**\n   * Match values that are between the specified values.\n   *\n   * @default - None\n   */\n  readonly between?: BetweenCondition;\n\n  /**\n   * Match values that are strictly between the specified values.\n   *\n   * @default - None\n   */\n  readonly betweenStrict?: BetweenCondition;\n}\n\n/**\n * A subscription filter for an attribute.\n */\nexport class SubscriptionFilter {\n  /**\n   * Returns a subscription filter for a string attribute.\n   */\n  public static stringFilter(stringConditions: StringConditions) {\n    const conditions = new Array<any>();\n\n    if (stringConditions.whitelist && stringConditions.allowlist) {\n      throw new Error('`whitelist` is deprecated; please use `allowlist` instead');\n    }\n    if (stringConditions.blacklist && stringConditions.denylist) {\n      throw new Error('`blacklist` is deprecated; please use `denylist` instead');\n    }\n    const allowlist = stringConditions.allowlist ?? stringConditions.whitelist;\n    const denylist = stringConditions.denylist ?? stringConditions.blacklist;\n\n    if (allowlist) {\n      conditions.push(...allowlist);\n    }\n\n    if (denylist) {\n      conditions.push({ 'anything-but': denylist });\n    }\n\n    if (stringConditions.matchPrefixes) {\n      conditions.push(...stringConditions.matchPrefixes.map(p => ({ prefix: p })));\n    }\n\n    return new SubscriptionFilter(conditions);\n  }\n\n  /**\n   * Returns a subscription filter for a numeric attribute.\n   */\n  public static numericFilter(numericConditions: NumericConditions) {\n    const conditions = new Array<any>();\n\n    if (numericConditions.whitelist && numericConditions.allowlist) {\n      throw new Error('`whitelist` is deprecated; please use `allowlist` instead');\n    }\n    const allowlist = numericConditions.allowlist ?? numericConditions.whitelist;\n\n    if (allowlist) {\n      conditions.push(...allowlist.map(v => ({ numeric: ['=', v] })));\n    }\n\n    if (numericConditions.greaterThan !== undefined) {\n      conditions.push({ numeric: ['>', numericConditions.greaterThan] });\n    }\n\n    if (numericConditions.greaterThanOrEqualTo !== undefined) {\n      conditions.push({ numeric: ['>=', numericConditions.greaterThanOrEqualTo] });\n    }\n\n    if (numericConditions.lessThan !== undefined) {\n      conditions.push({ numeric: ['<', numericConditions.lessThan] });\n    }\n\n    if (numericConditions.lessThanOrEqualTo !== undefined) {\n      conditions.push({ numeric: ['<=', numericConditions.lessThanOrEqualTo] });\n    }\n\n    if (numericConditions.between) {\n      conditions.push({ numeric: ['>=', numericConditions.between.start, '<=', numericConditions.between.stop] });\n    }\n\n    if (numericConditions.betweenStrict) {\n      conditions.push({ numeric: ['>', numericConditions.betweenStrict.start, '<', numericConditions.betweenStrict.stop] });\n    }\n\n    return new SubscriptionFilter(conditions);\n  }\n\n  /**\n   * Returns a subscription filter for attribute key matching.\n   */\n  public static existsFilter() {\n    return new SubscriptionFilter([{ exists: true }]);\n  }\n\n  /**\n   *\n   * @param conditions conditions that specify the message attributes that should be included, excluded, matched, etc.\n   */\n  constructor(public readonly conditions: any[] = []) {}\n}\n"],
  "mappings": "yNAsHA,wBAA+B,CAoF7B,YAA4B,WAAoB,GAAE,CAAtB,KAAA,WAAA,iBAhFd,cAAa,iBAAkC,0FAC3D,KAAM,YAAa,GAAI,OAEvB,GAAI,iBAAiB,WAAa,iBAAiB,UACjD,KAAM,IAAI,OAAM,6DAElB,GAAI,iBAAiB,WAAa,iBAAiB,SACjD,KAAM,IAAI,OAAM,4DAElB,KAAM,WAAS,IAAG,iBAAiB,aAAS,MAAA,KAAA,OAAA,GAAI,iBAAiB,UAC3D,SAAQ,IAAG,iBAAiB,YAAQ,MAAA,KAAA,OAAA,GAAI,iBAAiB,UAE/D,MAAI,YACF,WAAW,KAAK,GAAG,WAGjB,UACF,WAAW,KAAK,CAAE,eAAgB,WAGhC,iBAAiB,eACnB,WAAW,KAAK,GAAG,iBAAiB,cAAc,IAAI,GAAM,EAAE,OAAQ,MAGjE,GAAI,oBAAmB,kBAMlB,eAAc,kBAAoC,yFAC9D,KAAM,YAAa,GAAI,OAEvB,GAAI,kBAAkB,WAAa,kBAAkB,UACnD,KAAM,IAAI,OAAM,6DAElB,KAAM,WAAS,IAAG,kBAAkB,aAAS,MAAA,KAAA,OAAA,GAAI,kBAAkB,UAEnE,MAAI,YACF,WAAW,KAAK,GAAG,UAAU,IAAI,GAAM,EAAE,QAAS,CAAC,IAAK,OAGtD,kBAAkB,cAAgB,QACpC,WAAW,KAAK,CAAE,QAAS,CAAC,IAAK,kBAAkB,eAGjD,kBAAkB,uBAAyB,QAC7C,WAAW,KAAK,CAAE,QAAS,CAAC,KAAM,kBAAkB,wBAGlD,kBAAkB,WAAa,QACjC,WAAW,KAAK,CAAE,QAAS,CAAC,IAAK,kBAAkB,YAGjD,kBAAkB,oBAAsB,QAC1C,WAAW,KAAK,CAAE,QAAS,CAAC,KAAM,kBAAkB,qBAGlD,kBAAkB,SACpB,WAAW,KAAK,CAAE,QAAS,CAAC,KAAM,kBAAkB,QAAQ,MAAO,KAAM,kBAAkB,QAAQ,QAGjG,kBAAkB,eACpB,WAAW,KAAK,CAAE,QAAS,CAAC,IAAK,kBAAkB,cAAc,MAAO,IAAK,kBAAkB,cAAc,QAGxG,GAAI,oBAAmB,kBAMlB,eAAY,CACxB,MAAO,IAAI,oBAAmB,CAAC,CAAE,OAAQ,OA7E7C,QAAA,mBAAA",
  "names": []
}
