{
  "version": 3,
  "sources": ["ask.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-03-01T02:10:02.933Z\",\"fingerprint\":\"ul+dn2shW2srjL0HjCQJMZUv/OQ1uJAzq0oZn6BraN4=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n/**\n * Properties for defining a `CfnSkill`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html\n */\nexport interface CfnSkillProps {\n\n    /**\n     * `Alexa::ASK::Skill.AuthenticationConfiguration`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html#cfn-ask-skill-authenticationconfiguration\n     */\n    readonly authenticationConfiguration: CfnSkill.AuthenticationConfigurationProperty | cdk.IResolvable;\n\n    /**\n     * `Alexa::ASK::Skill.SkillPackage`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html#cfn-ask-skill-skillpackage\n     */\n    readonly skillPackage: CfnSkill.SkillPackageProperty | cdk.IResolvable;\n\n    /**\n     * `Alexa::ASK::Skill.VendorId`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html#cfn-ask-skill-vendorid\n     */\n    readonly vendorId: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnSkillProps`\n *\n * @param properties - the TypeScript properties of a `CfnSkillProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnSkillPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('authenticationConfiguration', cdk.requiredValidator)(properties.authenticationConfiguration));\n    errors.collect(cdk.propertyValidator('authenticationConfiguration', CfnSkill_AuthenticationConfigurationPropertyValidator)(properties.authenticationConfiguration));\n    errors.collect(cdk.propertyValidator('skillPackage', cdk.requiredValidator)(properties.skillPackage));\n    errors.collect(cdk.propertyValidator('skillPackage', CfnSkill_SkillPackagePropertyValidator)(properties.skillPackage));\n    errors.collect(cdk.propertyValidator('vendorId', cdk.requiredValidator)(properties.vendorId));\n    errors.collect(cdk.propertyValidator('vendorId', cdk.validateString)(properties.vendorId));\n    return errors.wrap('supplied properties not correct for \"CfnSkillProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `Alexa::ASK::Skill` resource\n *\n * @param properties - the TypeScript properties of a `CfnSkillProps`\n *\n * @returns the AWS CloudFormation properties of an `Alexa::ASK::Skill` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSkillPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSkillPropsValidator(properties).assertSuccess();\n    return {\n        AuthenticationConfiguration: cfnSkillAuthenticationConfigurationPropertyToCloudFormation(properties.authenticationConfiguration),\n        SkillPackage: cfnSkillSkillPackagePropertyToCloudFormation(properties.skillPackage),\n        VendorId: cdk.stringToCloudFormation(properties.vendorId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSkillPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSkillProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSkillProps>();\n    ret.addPropertyResult('authenticationConfiguration', 'AuthenticationConfiguration', CfnSkillAuthenticationConfigurationPropertyFromCloudFormation(properties.AuthenticationConfiguration));\n    ret.addPropertyResult('skillPackage', 'SkillPackage', CfnSkillSkillPackagePropertyFromCloudFormation(properties.SkillPackage));\n    ret.addPropertyResult('vendorId', 'VendorId', cfn_parse.FromCloudFormation.getString(properties.VendorId));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `Alexa::ASK::Skill`\n *\n *\n *\n * @cloudformationResource Alexa::ASK::Skill\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html\n */\nexport class CfnSkill extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"Alexa::ASK::Skill\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnSkill {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnSkillPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnSkill(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * `Alexa::ASK::Skill.AuthenticationConfiguration`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html#cfn-ask-skill-authenticationconfiguration\n     */\n    public authenticationConfiguration: CfnSkill.AuthenticationConfigurationProperty | cdk.IResolvable;\n\n    /**\n     * `Alexa::ASK::Skill.SkillPackage`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html#cfn-ask-skill-skillpackage\n     */\n    public skillPackage: CfnSkill.SkillPackageProperty | cdk.IResolvable;\n\n    /**\n     * `Alexa::ASK::Skill.VendorId`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html#cfn-ask-skill-vendorid\n     */\n    public vendorId: string;\n\n    /**\n     * Create a new `Alexa::ASK::Skill`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnSkillProps) {\n        super(scope, id, { type: CfnSkill.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'authenticationConfiguration', this);\n        cdk.requireProperty(props, 'skillPackage', this);\n        cdk.requireProperty(props, 'vendorId', this);\n\n        this.authenticationConfiguration = props.authenticationConfiguration;\n        this.skillPackage = props.skillPackage;\n        this.vendorId = props.vendorId;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnSkill.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            authenticationConfiguration: this.authenticationConfiguration,\n            skillPackage: this.skillPackage,\n            vendorId: this.vendorId,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnSkillPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnSkill {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ask-skill-authenticationconfiguration.html\n     */\n    export interface AuthenticationConfigurationProperty {\n        /**\n         * `CfnSkill.AuthenticationConfigurationProperty.ClientId`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ask-skill-authenticationconfiguration.html#cfn-ask-skill-authenticationconfiguration-clientid\n         */\n        readonly clientId: string;\n        /**\n         * `CfnSkill.AuthenticationConfigurationProperty.ClientSecret`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ask-skill-authenticationconfiguration.html#cfn-ask-skill-authenticationconfiguration-clientsecret\n         */\n        readonly clientSecret: string;\n        /**\n         * `CfnSkill.AuthenticationConfigurationProperty.RefreshToken`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ask-skill-authenticationconfiguration.html#cfn-ask-skill-authenticationconfiguration-refreshtoken\n         */\n        readonly refreshToken: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `AuthenticationConfigurationProperty`\n *\n * @param properties - the TypeScript properties of a `AuthenticationConfigurationProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSkill_AuthenticationConfigurationPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('clientId', cdk.requiredValidator)(properties.clientId));\n    errors.collect(cdk.propertyValidator('clientId', cdk.validateString)(properties.clientId));\n    errors.collect(cdk.propertyValidator('clientSecret', cdk.requiredValidator)(properties.clientSecret));\n    errors.collect(cdk.propertyValidator('clientSecret', cdk.validateString)(properties.clientSecret));\n    errors.collect(cdk.propertyValidator('refreshToken', cdk.requiredValidator)(properties.refreshToken));\n    errors.collect(cdk.propertyValidator('refreshToken', cdk.validateString)(properties.refreshToken));\n    return errors.wrap('supplied properties not correct for \"AuthenticationConfigurationProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `Alexa::ASK::Skill.AuthenticationConfiguration` resource\n *\n * @param properties - the TypeScript properties of a `AuthenticationConfigurationProperty`\n *\n * @returns the AWS CloudFormation properties of an `Alexa::ASK::Skill.AuthenticationConfiguration` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSkillAuthenticationConfigurationPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSkill_AuthenticationConfigurationPropertyValidator(properties).assertSuccess();\n    return {\n        ClientId: cdk.stringToCloudFormation(properties.clientId),\n        ClientSecret: cdk.stringToCloudFormation(properties.clientSecret),\n        RefreshToken: cdk.stringToCloudFormation(properties.refreshToken),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSkillAuthenticationConfigurationPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSkill.AuthenticationConfigurationProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSkill.AuthenticationConfigurationProperty>();\n    ret.addPropertyResult('clientId', 'ClientId', cfn_parse.FromCloudFormation.getString(properties.ClientId));\n    ret.addPropertyResult('clientSecret', 'ClientSecret', cfn_parse.FromCloudFormation.getString(properties.ClientSecret));\n    ret.addPropertyResult('refreshToken', 'RefreshToken', cfn_parse.FromCloudFormation.getString(properties.RefreshToken));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSkill {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ask-skill-overrides.html\n     */\n    export interface OverridesProperty {\n        /**\n         * `CfnSkill.OverridesProperty.Manifest`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ask-skill-overrides.html#cfn-ask-skill-overrides-manifest\n         */\n        readonly manifest?: any | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `OverridesProperty`\n *\n * @param properties - the TypeScript properties of a `OverridesProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSkill_OverridesPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('manifest', cdk.validateObject)(properties.manifest));\n    return errors.wrap('supplied properties not correct for \"OverridesProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `Alexa::ASK::Skill.Overrides` resource\n *\n * @param properties - the TypeScript properties of a `OverridesProperty`\n *\n * @returns the AWS CloudFormation properties of an `Alexa::ASK::Skill.Overrides` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSkillOverridesPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSkill_OverridesPropertyValidator(properties).assertSuccess();\n    return {\n        Manifest: cdk.objectToCloudFormation(properties.manifest),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSkillOverridesPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSkill.OverridesProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSkill.OverridesProperty>();\n    ret.addPropertyResult('manifest', 'Manifest', properties.Manifest != null ? cfn_parse.FromCloudFormation.getAny(properties.Manifest) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnSkill {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ask-skill-skillpackage.html\n     */\n    export interface SkillPackageProperty {\n        /**\n         * `CfnSkill.SkillPackageProperty.Overrides`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ask-skill-skillpackage.html#cfn-ask-skill-skillpackage-overrides\n         */\n        readonly overrides?: CfnSkill.OverridesProperty | cdk.IResolvable;\n        /**\n         * `CfnSkill.SkillPackageProperty.S3Bucket`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ask-skill-skillpackage.html#cfn-ask-skill-skillpackage-s3bucket\n         */\n        readonly s3Bucket: string;\n        /**\n         * `CfnSkill.SkillPackageProperty.S3BucketRole`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ask-skill-skillpackage.html#cfn-ask-skill-skillpackage-s3bucketrole\n         */\n        readonly s3BucketRole?: string;\n        /**\n         * `CfnSkill.SkillPackageProperty.S3Key`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ask-skill-skillpackage.html#cfn-ask-skill-skillpackage-s3key\n         */\n        readonly s3Key: string;\n        /**\n         * `CfnSkill.SkillPackageProperty.S3ObjectVersion`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ask-skill-skillpackage.html#cfn-ask-skill-skillpackage-s3objectversion\n         */\n        readonly s3ObjectVersion?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `SkillPackageProperty`\n *\n * @param properties - the TypeScript properties of a `SkillPackageProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnSkill_SkillPackagePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('overrides', CfnSkill_OverridesPropertyValidator)(properties.overrides));\n    errors.collect(cdk.propertyValidator('s3Bucket', cdk.requiredValidator)(properties.s3Bucket));\n    errors.collect(cdk.propertyValidator('s3Bucket', cdk.validateString)(properties.s3Bucket));\n    errors.collect(cdk.propertyValidator('s3BucketRole', cdk.validateString)(properties.s3BucketRole));\n    errors.collect(cdk.propertyValidator('s3Key', cdk.requiredValidator)(properties.s3Key));\n    errors.collect(cdk.propertyValidator('s3Key', cdk.validateString)(properties.s3Key));\n    errors.collect(cdk.propertyValidator('s3ObjectVersion', cdk.validateString)(properties.s3ObjectVersion));\n    return errors.wrap('supplied properties not correct for \"SkillPackageProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `Alexa::ASK::Skill.SkillPackage` resource\n *\n * @param properties - the TypeScript properties of a `SkillPackageProperty`\n *\n * @returns the AWS CloudFormation properties of an `Alexa::ASK::Skill.SkillPackage` resource.\n */\n// @ts-ignore TS6133\nfunction cfnSkillSkillPackagePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnSkill_SkillPackagePropertyValidator(properties).assertSuccess();\n    return {\n        Overrides: cfnSkillOverridesPropertyToCloudFormation(properties.overrides),\n        S3Bucket: cdk.stringToCloudFormation(properties.s3Bucket),\n        S3BucketRole: cdk.stringToCloudFormation(properties.s3BucketRole),\n        S3Key: cdk.stringToCloudFormation(properties.s3Key),\n        S3ObjectVersion: cdk.stringToCloudFormation(properties.s3ObjectVersion),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnSkillSkillPackagePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSkill.SkillPackageProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSkill.SkillPackageProperty>();\n    ret.addPropertyResult('overrides', 'Overrides', properties.Overrides != null ? CfnSkillOverridesPropertyFromCloudFormation(properties.Overrides) : undefined);\n    ret.addPropertyResult('s3Bucket', 'S3Bucket', cfn_parse.FromCloudFormation.getString(properties.S3Bucket));\n    ret.addPropertyResult('s3BucketRole', 'S3BucketRole', properties.S3BucketRole != null ? cfn_parse.FromCloudFormation.getString(properties.S3BucketRole) : undefined);\n    ret.addPropertyResult('s3Key', 'S3Key', cfn_parse.FromCloudFormation.getString(properties.S3Key));\n    ret.addPropertyResult('s3ObjectVersion', 'S3ObjectVersion', properties.S3ObjectVersion != null ? cfn_parse.FromCloudFormation.getString(properties.S3ObjectVersion) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n"],
  "mappings": "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",
  "names": []
}
