{
  "version": 3,
  "sources": ["verify-imports-resolve-same.ts"],
  "sourcesContent": ["/* eslint-disable no-console */\n/**\n * Verify that the two styles of imports we support:\n *\n *    import { aws_ec2 } from 'aws-cdk-lib';\n *    import * as aws_ec2 from 'aws-cdk-lib/aws-ec2';\n *\n * Resolve to the same source file when analyzed using the TypeScript compiler.\n *\n * This is necessary for Rosetta's analysis and translation of examples: we need\n * to know what submodule we're importing here, and we need to be able to deal\n * with both styles since both are used interchangeably.\n */\nimport * as os from 'os';\nimport * as path from 'path';\nimport * as fs from 'fs-extra';\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as ts from 'typescript';\n\nasync function main() {\n  // First make a tempdir and symlink `aws-cdk-lib` into it so we can refer to it\n  // as if it was an installed module.\n  await withTemporaryDirectory(async (tmpDir) => {\n    await fs.mkdirp(path.join(tmpDir, 'node_modules'));\n    await fs.symlink(path.resolve(__dirname, '..'), path.join(tmpDir, 'node_modules', 'aws-cdk-lib'));\n\n    const import1 = 'import { aws_ec2 } from \"aws-cdk-lib\";';\n    const import2 = 'import * as aws_ec2 from \"aws-cdk-lib/aws-ec2\";';\n\n    const src1 = await compileAndResolve(path.join(tmpDir, 'program1.ts'), import1, 'aws_ec2');\n    const src2 = await compileAndResolve(path.join(tmpDir, 'program2.ts'), import2, 'aws_ec2');\n\n    if (src1 !== src2) {\n      console.error('Import mismatch!');\n      console.error('\\n    ', import1, '\\n');\n      console.error('resolves to', src1);\n      console.error('\\n    ', import2, '\\n');\n      console.error('resolves to', src2);\n      process.exitCode = 1;\n    }\n  });\n}\n\nasync function compileAndResolve(fileName: string, contents: string, symbolName: string) {\n  await fs.writeFile(fileName, contents + `\\n\\nconsole.log(${symbolName});`, { encoding: 'utf-8' });\n  const program = ts.createProgram({ rootNames: [fileName], options: STANDARD_COMPILER_OPTIONS });\n\n  const sourceFile = program.getSourceFile(fileName);\n  if (!sourceFile) {\n    throw new Error(`Could not find sourcefile back: ${fileName}`);\n  }\n\n  const diags = [\n    ...program.getGlobalDiagnostics(),\n    ...program.getDeclarationDiagnostics(sourceFile),\n    ...program.getSyntacticDiagnostics(sourceFile),\n    ...program.getSemanticDiagnostics(sourceFile),\n  ];\n  if (diags.length > 0) {\n    console.error(ts.formatDiagnostics(diags, {\n      getNewLine: () => '\\n',\n      getCurrentDirectory: () => path.dirname(fileName),\n      getCanonicalFileName: (f) => path.resolve(f),\n    }));\n    throw new Error('Compilation failed');\n  }\n\n  // Find the 'console.log()' back and resolve the symbol inside\n  const logStmt = assertNode(sourceFile.statements[1], ts.isExpressionStatement);\n  const logCall = assertNode(logStmt.expression, ts.isCallExpression);\n  const ident = assertNode(logCall.arguments[0], ts.isIdentifier);\n\n  let sym = program.getTypeChecker().getSymbolAtLocation(ident);\n\n  // Resolve alias if applicable\n  // eslint-disable-next-line no-bitwise\n  while (sym && ((sym.flags & ts.SymbolFlags.Alias) !== 0)) {\n    sym = program.getTypeChecker().getAliasedSymbol(sym);\n  }\n\n  if (!sym) {\n    throw new Error(`Could not resolve: ${symbolName} in '${contents}'`);\n  }\n\n  // Return the filename\n  const srcFile = sym.declarations?.[0].getSourceFile().fileName.replace(/[.](ts|js|d\\.ts)$/, '');\n  if (!srcFile) {\n    console.log(sym);\n    throw new Error(`Symbol ${symbolName} in '${contents}' does not resolve to a source location`);\n  }\n  return srcFile;\n}\n\nexport async function withTemporaryDirectory<T>(callback: (dir: string) => Promise<T>): Promise<T> {\n  const tmpdir = await fs.mkdtemp(path.join(os.tmpdir(), path.basename(__filename)));\n  try {\n    return await callback(tmpdir);\n  } finally {\n    await fs.remove(tmpdir);\n  }\n}\n\nfunction assertNode<A extends ts.Node>(x: ts.Node, assert: (x: ts.Node) => x is A): A {\n  if (!assert(x)) {\n    throw new Error(`Not the right type of node, expecting ${assert.name}, got ${ts.SyntaxKind[x.kind]}`);\n  }\n  return x;\n}\n\nexport const STANDARD_COMPILER_OPTIONS: ts.CompilerOptions = {\n  alwaysStrict: true,\n  charset: 'utf8',\n  declaration: true,\n  experimentalDecorators: true,\n  inlineSourceMap: true,\n  inlineSources: true,\n  lib: ['lib.es2016.d.ts', 'lib.es2017.object.d.ts', 'lib.es2017.string.d.ts'],\n  module: ts.ModuleKind.CommonJS,\n  noEmitOnError: true,\n  noFallthroughCasesInSwitch: true,\n  noImplicitAny: true,\n  noImplicitReturns: true,\n  noImplicitThis: true,\n  noUnusedLocals: false, // Important, becomes super annoying without this\n  noUnusedParameters: false, // Important, becomes super annoying without this\n  resolveJsonModule: true,\n  strict: true,\n  strictNullChecks: true,\n  strictPropertyInitialization: true,\n  stripInternal: true,\n  target: ts.ScriptTarget.ES2019,\n  // Incremental builds\n  incremental: true,\n  tsBuildInfoFile: '.tsbuildinfo',\n};\n\nmain().catch((e) => {\n  // eslint-disable-next-line no-console\n  console.error(e);\n  process.exitCode = 1;\n});\n"],
  "mappings": "4IAaA,KAAA,IAAA,QAAA,MACA,KAAA,QAAA,QACA,GAAA,QAAA,YAGA,GAAA,QAAA,cAEA,qBAAmB,CAGjB,KAAM,wBAAuB,KAAO,SAAU,CAC5C,KAAM,IAAG,OAAO,KAAK,KAAK,OAAQ,iBAClC,KAAM,IAAG,QAAQ,KAAK,QAAQ,UAAW,MAAO,KAAK,KAAK,OAAQ,eAAgB,gBAElF,KAAM,SAAU,yCACV,QAAU,kDAEV,KAAO,KAAM,mBAAkB,KAAK,KAAK,OAAQ,eAAgB,QAAS,WAC1E,KAAO,KAAM,mBAAkB,KAAK,KAAK,OAAQ,eAAgB,QAAS,WAEhF,AAAI,OAAS,MACX,SAAQ,MAAM,oBACd,QAAQ,MAAM;MAAU,QAAS;GACjC,QAAQ,MAAM,cAAe,MAC7B,QAAQ,MAAM;MAAU,QAAS;GACjC,QAAQ,MAAM,cAAe,MAC7B,QAAQ,SAAW,KAKzB,iCAAiC,SAAkB,SAAkB,WAAkB,QACrF,KAAM,IAAG,UAAU,SAAU,SAAW;;cAAmB,eAAgB,CAAE,SAAU,UACvF,KAAM,SAAU,GAAG,cAAc,CAAE,UAAW,CAAC,UAAW,QAAS,QAAA,4BAE7D,WAAa,QAAQ,cAAc,UACzC,GAAI,CAAC,WACH,KAAM,IAAI,OAAM,mCAAmC,YAGrD,KAAM,OAAQ,CACZ,GAAG,QAAQ,uBACX,GAAG,QAAQ,0BAA0B,YACrC,GAAG,QAAQ,wBAAwB,YACnC,GAAG,QAAQ,uBAAuB,aAEpC,GAAI,MAAM,OAAS,EACjB,cAAQ,MAAM,GAAG,kBAAkB,MAAO,CACxC,WAAY,IAAM;EAClB,oBAAqB,IAAM,KAAK,QAAQ,UACxC,qBAAsB,AAAC,GAAM,KAAK,QAAQ,MAEtC,GAAI,OAAM,sBAIlB,KAAM,SAAU,WAAW,WAAW,WAAW,GAAI,GAAG,uBAClD,QAAU,WAAW,QAAQ,WAAY,GAAG,kBAC5C,MAAQ,WAAW,QAAQ,UAAU,GAAI,GAAG,cAElD,GAAI,KAAM,QAAQ,iBAAiB,oBAAoB,OAIvD,KAAO,KAAS,KAAI,MAAQ,GAAG,YAAY,SAAW,GACpD,IAAM,QAAQ,iBAAiB,iBAAiB,KAGlD,GAAI,CAAC,IACH,KAAM,IAAI,OAAM,sBAAsB,kBAAkB,aAI1D,KAAM,SAAO,IAAG,IAAI,gBAAY,MAAA,KAAA,OAAA,OAAA,GAAG,GAAG,gBAAgB,SAAS,QAAQ,oBAAqB,IAC5F,GAAI,CAAC,QACH,cAAQ,IAAI,KACN,GAAI,OAAM,UAAU,kBAAkB,mDAE9C,MAAO,SAGF,sCAAyC,SAAqC,CACnF,KAAM,QAAS,KAAM,IAAG,QAAQ,KAAK,KAAK,GAAG,SAAU,KAAK,SAAS,cACrE,GAAI,CACF,MAAO,MAAM,UAAS,gBAEtB,KAAM,IAAG,OAAO,SALpB,QAAA,uBAAA,uBASA,oBAAuC,EAAY,OAA8B,CAC/E,GAAI,CAAC,OAAO,GACV,KAAM,IAAI,OAAM,yCAAyC,OAAO,aAAa,GAAG,WAAW,EAAE,SAE/F,MAAO,GAGI,QAAA,0BAAgD,CAC3D,aAAc,GACd,QAAS,OACT,YAAa,GACb,uBAAwB,GACxB,gBAAiB,GACjB,cAAe,GACf,IAAK,CAAC,kBAAmB,yBAA0B,0BACnD,OAAQ,GAAG,WAAW,SACtB,cAAe,GACf,2BAA4B,GAC5B,cAAe,GACf,kBAAmB,GACnB,eAAgB,GAChB,eAAgB,GAChB,mBAAoB,GACpB,kBAAmB,GACnB,OAAQ,GACR,iBAAkB,GAClB,6BAA8B,GAC9B,cAAe,GACf,OAAQ,GAAG,aAAa,OAExB,YAAa,GACb,gBAAiB,gBAGnB,OAAO,MAAM,AAAC,GAAK,CAEjB,QAAQ,MAAM,GACd,QAAQ,SAAW",
  "names": []
}
