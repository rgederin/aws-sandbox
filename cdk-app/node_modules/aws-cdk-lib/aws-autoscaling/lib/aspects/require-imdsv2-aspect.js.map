{
  "version": 3,
  "sources": ["require-imdsv2-aspect.ts"],
  "sourcesContent": ["import * as cdk from '../../../core';\nimport { IConstruct } from 'constructs';\nimport { AutoScalingGroup } from '../auto-scaling-group';\nimport { CfnLaunchConfiguration } from '../autoscaling.generated';\n\n/**\n * Aspect that makes IMDSv2 required on instances deployed by AutoScalingGroups.\n */\nexport class AutoScalingGroupRequireImdsv2Aspect implements cdk.IAspect {\n  constructor() {\n  }\n\n  public visit(node: IConstruct): void {\n    if (!(node instanceof AutoScalingGroup)) {\n      return;\n    }\n\n    const launchConfig = node.node.tryFindChild('LaunchConfig') as CfnLaunchConfiguration;\n    if (cdk.isResolvableObject(launchConfig.metadataOptions)) {\n      this.warn(node, 'CfnLaunchConfiguration.MetadataOptions field is a CDK token.');\n      return;\n    }\n\n    launchConfig.metadataOptions = {\n      ...launchConfig.metadataOptions,\n      httpTokens: 'required',\n    };\n  }\n\n  /**\n   * Adds a warning annotation to a node.\n   *\n   * @param node The scope to add the warning to.\n   * @param message The warning message.\n   */\n  protected warn(node: IConstruct, message: string) {\n    cdk.Annotations.of(node).addWarning(`${AutoScalingGroupRequireImdsv2Aspect.name} failed on node ${node.node.id}: ${message}`);\n  }\n}\n"],
  "mappings": "+KAAA,IAAA,QAAA,iBAEA,qBAAA,QAAA,yBAMA,yCAAgD,CAC9C,aAAA,EAGO,MAAM,KAAgB,CAC3B,GAAI,CAAE,gBAAgB,sBAAA,kBACpB,OAGF,KAAM,cAAe,KAAK,KAAK,aAAa,gBAC5C,GAAI,IAAI,mBAAmB,aAAa,iBAAkB,CACxD,KAAK,KAAK,KAAM,gEAChB,OAGF,aAAa,gBAAkB,IAC1B,aAAa,gBAChB,WAAY,YAUN,KAAK,KAAkB,QAAe,CAC9C,IAAI,YAAY,GAAG,MAAM,WAAW,GAAG,oCAAoC,uBAAuB,KAAK,KAAK,OAAO,YA5BvH,QAAA,oCAAA",
  "names": []
}
