{
  "version": 3,
  "sources": ["panorama.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-03-01T02:10:08.945Z\",\"fingerprint\":\"K9NpnMJ8wsPcrnP4CY+URwj7+lhExYMmBD74L2mdAOY=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n/**\n * Properties for defining a `CfnApplicationInstance`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html\n */\nexport interface CfnApplicationInstanceProps {\n\n    /**\n     * The device's ID.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-defaultruntimecontextdevice\n     */\n    readonly defaultRuntimeContextDevice: string;\n\n    /**\n     * The application's manifest document.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-manifestpayload\n     */\n    readonly manifestPayload: CfnApplicationInstance.ManifestPayloadProperty | cdk.IResolvable;\n\n    /**\n     * The ID of an application instance to replace with the new instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-applicationinstanceidtoreplace\n     */\n    readonly applicationInstanceIdToReplace?: string;\n\n    /**\n     * A description for the application instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-description\n     */\n    readonly description?: string;\n\n    /**\n     * A device's ID.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-deviceid\n     */\n    readonly deviceId?: string;\n\n    /**\n     * Setting overrides for the application manifest.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-manifestoverridespayload\n     */\n    readonly manifestOverridesPayload?: CfnApplicationInstance.ManifestOverridesPayloadProperty | cdk.IResolvable;\n\n    /**\n     * A name for the application instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-name\n     */\n    readonly name?: string;\n\n    /**\n     * The ARN of a runtime role for the application instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-runtimerolearn\n     */\n    readonly runtimeRoleArn?: string;\n\n    /**\n     * Only include instances with a specific status.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-statusfilter\n     */\n    readonly statusFilter?: string;\n\n    /**\n     * Tags for the application instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnApplicationInstanceProps`\n *\n * @param properties - the TypeScript properties of a `CfnApplicationInstanceProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnApplicationInstancePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('applicationInstanceIdToReplace', cdk.validateString)(properties.applicationInstanceIdToReplace));\n    errors.collect(cdk.propertyValidator('defaultRuntimeContextDevice', cdk.requiredValidator)(properties.defaultRuntimeContextDevice));\n    errors.collect(cdk.propertyValidator('defaultRuntimeContextDevice', cdk.validateString)(properties.defaultRuntimeContextDevice));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('deviceId', cdk.validateString)(properties.deviceId));\n    errors.collect(cdk.propertyValidator('manifestOverridesPayload', CfnApplicationInstance_ManifestOverridesPayloadPropertyValidator)(properties.manifestOverridesPayload));\n    errors.collect(cdk.propertyValidator('manifestPayload', cdk.requiredValidator)(properties.manifestPayload));\n    errors.collect(cdk.propertyValidator('manifestPayload', CfnApplicationInstance_ManifestPayloadPropertyValidator)(properties.manifestPayload));\n    errors.collect(cdk.propertyValidator('name', cdk.validateString)(properties.name));\n    errors.collect(cdk.propertyValidator('runtimeRoleArn', cdk.validateString)(properties.runtimeRoleArn));\n    errors.collect(cdk.propertyValidator('statusFilter', cdk.validateString)(properties.statusFilter));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnApplicationInstanceProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Panorama::ApplicationInstance` resource\n *\n * @param properties - the TypeScript properties of a `CfnApplicationInstanceProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Panorama::ApplicationInstance` resource.\n */\n// @ts-ignore TS6133\nfunction cfnApplicationInstancePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnApplicationInstancePropsValidator(properties).assertSuccess();\n    return {\n        DefaultRuntimeContextDevice: cdk.stringToCloudFormation(properties.defaultRuntimeContextDevice),\n        ManifestPayload: cfnApplicationInstanceManifestPayloadPropertyToCloudFormation(properties.manifestPayload),\n        ApplicationInstanceIdToReplace: cdk.stringToCloudFormation(properties.applicationInstanceIdToReplace),\n        Description: cdk.stringToCloudFormation(properties.description),\n        DeviceId: cdk.stringToCloudFormation(properties.deviceId),\n        ManifestOverridesPayload: cfnApplicationInstanceManifestOverridesPayloadPropertyToCloudFormation(properties.manifestOverridesPayload),\n        Name: cdk.stringToCloudFormation(properties.name),\n        RuntimeRoleArn: cdk.stringToCloudFormation(properties.runtimeRoleArn),\n        StatusFilter: cdk.stringToCloudFormation(properties.statusFilter),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnApplicationInstancePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnApplicationInstanceProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnApplicationInstanceProps>();\n    ret.addPropertyResult('defaultRuntimeContextDevice', 'DefaultRuntimeContextDevice', cfn_parse.FromCloudFormation.getString(properties.DefaultRuntimeContextDevice));\n    ret.addPropertyResult('manifestPayload', 'ManifestPayload', CfnApplicationInstanceManifestPayloadPropertyFromCloudFormation(properties.ManifestPayload));\n    ret.addPropertyResult('applicationInstanceIdToReplace', 'ApplicationInstanceIdToReplace', properties.ApplicationInstanceIdToReplace != null ? cfn_parse.FromCloudFormation.getString(properties.ApplicationInstanceIdToReplace) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('deviceId', 'DeviceId', properties.DeviceId != null ? cfn_parse.FromCloudFormation.getString(properties.DeviceId) : undefined);\n    ret.addPropertyResult('manifestOverridesPayload', 'ManifestOverridesPayload', properties.ManifestOverridesPayload != null ? CfnApplicationInstanceManifestOverridesPayloadPropertyFromCloudFormation(properties.ManifestOverridesPayload) : undefined);\n    ret.addPropertyResult('name', 'Name', properties.Name != null ? cfn_parse.FromCloudFormation.getString(properties.Name) : undefined);\n    ret.addPropertyResult('runtimeRoleArn', 'RuntimeRoleArn', properties.RuntimeRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.RuntimeRoleArn) : undefined);\n    ret.addPropertyResult('statusFilter', 'StatusFilter', properties.StatusFilter != null ? cfn_parse.FromCloudFormation.getString(properties.StatusFilter) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Panorama::ApplicationInstance`\n *\n * Creates an application instance and deploys it to a device.\n *\n * @cloudformationResource AWS::Panorama::ApplicationInstance\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html\n */\nexport class CfnApplicationInstance extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Panorama::ApplicationInstance\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnApplicationInstance {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnApplicationInstancePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnApplicationInstance(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The application instance's ID.\n     * @cloudformationAttribute ApplicationInstanceId\n     */\n    public readonly attrApplicationInstanceId: string;\n\n    /**\n     * The application instance's ARN.\n     * @cloudformationAttribute Arn\n     */\n    public readonly attrArn: string;\n\n    /**\n     * The application instance's created time.\n     * @cloudformationAttribute CreatedTime\n     */\n    public readonly attrCreatedTime: number;\n\n    /**\n     * The application instance's default runtime context device name.\n     * @cloudformationAttribute DefaultRuntimeContextDeviceName\n     */\n    public readonly attrDefaultRuntimeContextDeviceName: string;\n\n    /**\n     * The application instance's health status.\n     * @cloudformationAttribute HealthStatus\n     */\n    public readonly attrHealthStatus: string;\n\n    /**\n     * The application instance's last updated time.\n     * @cloudformationAttribute LastUpdatedTime\n     */\n    public readonly attrLastUpdatedTime: number;\n\n    /**\n     * The application instance's status.\n     * @cloudformationAttribute Status\n     */\n    public readonly attrStatus: string;\n\n    /**\n     * The application instance's status description.\n     * @cloudformationAttribute StatusDescription\n     */\n    public readonly attrStatusDescription: string;\n\n    /**\n     * The device's ID.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-defaultruntimecontextdevice\n     */\n    public defaultRuntimeContextDevice: string;\n\n    /**\n     * The application's manifest document.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-manifestpayload\n     */\n    public manifestPayload: CfnApplicationInstance.ManifestPayloadProperty | cdk.IResolvable;\n\n    /**\n     * The ID of an application instance to replace with the new instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-applicationinstanceidtoreplace\n     */\n    public applicationInstanceIdToReplace: string | undefined;\n\n    /**\n     * A description for the application instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-description\n     */\n    public description: string | undefined;\n\n    /**\n     * A device's ID.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-deviceid\n     */\n    public deviceId: string | undefined;\n\n    /**\n     * Setting overrides for the application manifest.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-manifestoverridespayload\n     */\n    public manifestOverridesPayload: CfnApplicationInstance.ManifestOverridesPayloadProperty | cdk.IResolvable | undefined;\n\n    /**\n     * A name for the application instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-name\n     */\n    public name: string | undefined;\n\n    /**\n     * The ARN of a runtime role for the application instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-runtimerolearn\n     */\n    public runtimeRoleArn: string | undefined;\n\n    /**\n     * Only include instances with a specific status.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-statusfilter\n     */\n    public statusFilter: string | undefined;\n\n    /**\n     * Tags for the application instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::Panorama::ApplicationInstance`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnApplicationInstanceProps) {\n        super(scope, id, { type: CfnApplicationInstance.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'defaultRuntimeContextDevice', this);\n        cdk.requireProperty(props, 'manifestPayload', this);\n        this.attrApplicationInstanceId = cdk.Token.asString(this.getAtt('ApplicationInstanceId'));\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n        this.attrCreatedTime = cdk.Token.asNumber(this.getAtt('CreatedTime'));\n        this.attrDefaultRuntimeContextDeviceName = cdk.Token.asString(this.getAtt('DefaultRuntimeContextDeviceName'));\n        this.attrHealthStatus = cdk.Token.asString(this.getAtt('HealthStatus'));\n        this.attrLastUpdatedTime = cdk.Token.asNumber(this.getAtt('LastUpdatedTime'));\n        this.attrStatus = cdk.Token.asString(this.getAtt('Status'));\n        this.attrStatusDescription = cdk.Token.asString(this.getAtt('StatusDescription'));\n\n        this.defaultRuntimeContextDevice = props.defaultRuntimeContextDevice;\n        this.manifestPayload = props.manifestPayload;\n        this.applicationInstanceIdToReplace = props.applicationInstanceIdToReplace;\n        this.description = props.description;\n        this.deviceId = props.deviceId;\n        this.manifestOverridesPayload = props.manifestOverridesPayload;\n        this.name = props.name;\n        this.runtimeRoleArn = props.runtimeRoleArn;\n        this.statusFilter = props.statusFilter;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::Panorama::ApplicationInstance\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnApplicationInstance.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            defaultRuntimeContextDevice: this.defaultRuntimeContextDevice,\n            manifestPayload: this.manifestPayload,\n            applicationInstanceIdToReplace: this.applicationInstanceIdToReplace,\n            description: this.description,\n            deviceId: this.deviceId,\n            manifestOverridesPayload: this.manifestOverridesPayload,\n            name: this.name,\n            runtimeRoleArn: this.runtimeRoleArn,\n            statusFilter: this.statusFilter,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnApplicationInstancePropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnApplicationInstance {\n    /**\n     * Parameter overrides for an application instance. This is a JSON document that has a single key ( `PayloadData` ) where the value is an escaped string representation of the overrides document.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-panorama-applicationinstance-manifestoverridespayload.html\n     */\n    export interface ManifestOverridesPayloadProperty {\n        /**\n         * The overrides document.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-panorama-applicationinstance-manifestoverridespayload.html#cfn-panorama-applicationinstance-manifestoverridespayload-payloaddata\n         */\n        readonly payloadData?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ManifestOverridesPayloadProperty`\n *\n * @param properties - the TypeScript properties of a `ManifestOverridesPayloadProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnApplicationInstance_ManifestOverridesPayloadPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('payloadData', cdk.validateString)(properties.payloadData));\n    return errors.wrap('supplied properties not correct for \"ManifestOverridesPayloadProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Panorama::ApplicationInstance.ManifestOverridesPayload` resource\n *\n * @param properties - the TypeScript properties of a `ManifestOverridesPayloadProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Panorama::ApplicationInstance.ManifestOverridesPayload` resource.\n */\n// @ts-ignore TS6133\nfunction cfnApplicationInstanceManifestOverridesPayloadPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnApplicationInstance_ManifestOverridesPayloadPropertyValidator(properties).assertSuccess();\n    return {\n        PayloadData: cdk.stringToCloudFormation(properties.payloadData),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnApplicationInstanceManifestOverridesPayloadPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnApplicationInstance.ManifestOverridesPayloadProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnApplicationInstance.ManifestOverridesPayloadProperty>();\n    ret.addPropertyResult('payloadData', 'PayloadData', properties.PayloadData != null ? cfn_parse.FromCloudFormation.getString(properties.PayloadData) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnApplicationInstance {\n    /**\n     * A application verion's manifest file. This is a JSON document that has a single key ( `PayloadData` ) where the value is an escaped string representation of the application manifest ( `graph.json` ). This file is located in the `graphs` folder in your application source.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-panorama-applicationinstance-manifestpayload.html\n     */\n    export interface ManifestPayloadProperty {\n        /**\n         * The application manifest.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-panorama-applicationinstance-manifestpayload.html#cfn-panorama-applicationinstance-manifestpayload-payloaddata\n         */\n        readonly payloadData?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ManifestPayloadProperty`\n *\n * @param properties - the TypeScript properties of a `ManifestPayloadProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnApplicationInstance_ManifestPayloadPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('payloadData', cdk.validateString)(properties.payloadData));\n    return errors.wrap('supplied properties not correct for \"ManifestPayloadProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Panorama::ApplicationInstance.ManifestPayload` resource\n *\n * @param properties - the TypeScript properties of a `ManifestPayloadProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Panorama::ApplicationInstance.ManifestPayload` resource.\n */\n// @ts-ignore TS6133\nfunction cfnApplicationInstanceManifestPayloadPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnApplicationInstance_ManifestPayloadPropertyValidator(properties).assertSuccess();\n    return {\n        PayloadData: cdk.stringToCloudFormation(properties.payloadData),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnApplicationInstanceManifestPayloadPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnApplicationInstance.ManifestPayloadProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnApplicationInstance.ManifestPayloadProperty>();\n    ret.addPropertyResult('payloadData', 'PayloadData', properties.PayloadData != null ? cfn_parse.FromCloudFormation.getString(properties.PayloadData) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnPackage`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-package.html\n */\nexport interface CfnPackageProps {\n\n    /**\n     * A name for the package.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-package.html#cfn-panorama-package-packagename\n     */\n    readonly packageName: string;\n\n    /**\n     * Tags for the package.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-package.html#cfn-panorama-package-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnPackageProps`\n *\n * @param properties - the TypeScript properties of a `CfnPackageProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnPackagePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('packageName', cdk.requiredValidator)(properties.packageName));\n    errors.collect(cdk.propertyValidator('packageName', cdk.validateString)(properties.packageName));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnPackageProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Panorama::Package` resource\n *\n * @param properties - the TypeScript properties of a `CfnPackageProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Panorama::Package` resource.\n */\n// @ts-ignore TS6133\nfunction cfnPackagePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnPackagePropsValidator(properties).assertSuccess();\n    return {\n        PackageName: cdk.stringToCloudFormation(properties.packageName),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnPackagePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnPackageProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnPackageProps>();\n    ret.addPropertyResult('packageName', 'PackageName', cfn_parse.FromCloudFormation.getString(properties.PackageName));\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Panorama::Package`\n *\n * Creates a package and storage location in an Amazon S3 access point.\n *\n * @cloudformationResource AWS::Panorama::Package\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-package.html\n */\nexport class CfnPackage extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Panorama::Package\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnPackage {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnPackagePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnPackage(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The package's ARN.\n     * @cloudformationAttribute Arn\n     */\n    public readonly attrArn: string;\n\n    /**\n     * The item's created time.\n     * @cloudformationAttribute CreatedTime\n     */\n    public readonly attrCreatedTime: number;\n\n    /**\n     * The package's ID.\n     * @cloudformationAttribute PackageId\n     */\n    public readonly attrPackageId: string;\n\n    /**\n     * A name for the package.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-package.html#cfn-panorama-package-packagename\n     */\n    public packageName: string;\n\n    /**\n     * Tags for the package.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-package.html#cfn-panorama-package-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::Panorama::Package`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnPackageProps) {\n        super(scope, id, { type: CfnPackage.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'packageName', this);\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n        this.attrCreatedTime = cdk.Token.asNumber(this.getAtt('CreatedTime'));\n        this.attrPackageId = cdk.Token.asString(this.getAtt('PackageId'));\n\n        this.packageName = props.packageName;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::Panorama::Package\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnPackage.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            packageName: this.packageName,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnPackagePropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnPackageVersion`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html\n */\nexport interface CfnPackageVersionProps {\n\n    /**\n     * A package ID.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html#cfn-panorama-packageversion-packageid\n     */\n    readonly packageId: string;\n\n    /**\n     * A package version.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html#cfn-panorama-packageversion-packageversion\n     */\n    readonly packageVersion: string;\n\n    /**\n     * A patch version.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html#cfn-panorama-packageversion-patchversion\n     */\n    readonly patchVersion: string;\n\n    /**\n     * Whether to mark the new version as the latest version.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html#cfn-panorama-packageversion-marklatest\n     */\n    readonly markLatest?: boolean | cdk.IResolvable;\n\n    /**\n     * An owner account.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html#cfn-panorama-packageversion-owneraccount\n     */\n    readonly ownerAccount?: string;\n\n    /**\n     * If the version was marked latest, the new version to maker as latest.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html#cfn-panorama-packageversion-updatedlatestpatchversion\n     */\n    readonly updatedLatestPatchVersion?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnPackageVersionProps`\n *\n * @param properties - the TypeScript properties of a `CfnPackageVersionProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnPackageVersionPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('markLatest', cdk.validateBoolean)(properties.markLatest));\n    errors.collect(cdk.propertyValidator('ownerAccount', cdk.validateString)(properties.ownerAccount));\n    errors.collect(cdk.propertyValidator('packageId', cdk.requiredValidator)(properties.packageId));\n    errors.collect(cdk.propertyValidator('packageId', cdk.validateString)(properties.packageId));\n    errors.collect(cdk.propertyValidator('packageVersion', cdk.requiredValidator)(properties.packageVersion));\n    errors.collect(cdk.propertyValidator('packageVersion', cdk.validateString)(properties.packageVersion));\n    errors.collect(cdk.propertyValidator('patchVersion', cdk.requiredValidator)(properties.patchVersion));\n    errors.collect(cdk.propertyValidator('patchVersion', cdk.validateString)(properties.patchVersion));\n    errors.collect(cdk.propertyValidator('updatedLatestPatchVersion', cdk.validateString)(properties.updatedLatestPatchVersion));\n    return errors.wrap('supplied properties not correct for \"CfnPackageVersionProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::Panorama::PackageVersion` resource\n *\n * @param properties - the TypeScript properties of a `CfnPackageVersionProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::Panorama::PackageVersion` resource.\n */\n// @ts-ignore TS6133\nfunction cfnPackageVersionPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnPackageVersionPropsValidator(properties).assertSuccess();\n    return {\n        PackageId: cdk.stringToCloudFormation(properties.packageId),\n        PackageVersion: cdk.stringToCloudFormation(properties.packageVersion),\n        PatchVersion: cdk.stringToCloudFormation(properties.patchVersion),\n        MarkLatest: cdk.booleanToCloudFormation(properties.markLatest),\n        OwnerAccount: cdk.stringToCloudFormation(properties.ownerAccount),\n        UpdatedLatestPatchVersion: cdk.stringToCloudFormation(properties.updatedLatestPatchVersion),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnPackageVersionPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnPackageVersionProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnPackageVersionProps>();\n    ret.addPropertyResult('packageId', 'PackageId', cfn_parse.FromCloudFormation.getString(properties.PackageId));\n    ret.addPropertyResult('packageVersion', 'PackageVersion', cfn_parse.FromCloudFormation.getString(properties.PackageVersion));\n    ret.addPropertyResult('patchVersion', 'PatchVersion', cfn_parse.FromCloudFormation.getString(properties.PatchVersion));\n    ret.addPropertyResult('markLatest', 'MarkLatest', properties.MarkLatest != null ? cfn_parse.FromCloudFormation.getBoolean(properties.MarkLatest) : undefined);\n    ret.addPropertyResult('ownerAccount', 'OwnerAccount', properties.OwnerAccount != null ? cfn_parse.FromCloudFormation.getString(properties.OwnerAccount) : undefined);\n    ret.addPropertyResult('updatedLatestPatchVersion', 'UpdatedLatestPatchVersion', properties.UpdatedLatestPatchVersion != null ? cfn_parse.FromCloudFormation.getString(properties.UpdatedLatestPatchVersion) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::Panorama::PackageVersion`\n *\n * Registers a package version.\n *\n * @cloudformationResource AWS::Panorama::PackageVersion\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html\n */\nexport class CfnPackageVersion extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::Panorama::PackageVersion\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnPackageVersion {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnPackageVersionPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnPackageVersion(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * Whether the package version is the latest version.\n     * @cloudformationAttribute IsLatestPatch\n     */\n    public readonly attrIsLatestPatch: cdk.IResolvable;\n\n    /**\n     * The package version's ARN.\n     * @cloudformationAttribute PackageArn\n     */\n    public readonly attrPackageArn: string;\n\n    /**\n     * The package version's name.\n     * @cloudformationAttribute PackageName\n     */\n    public readonly attrPackageName: string;\n\n    /**\n     * The package version's registered time.\n     * @cloudformationAttribute RegisteredTime\n     */\n    public readonly attrRegisteredTime: number;\n\n    /**\n     * The package version's status.\n     * @cloudformationAttribute Status\n     */\n    public readonly attrStatus: string;\n\n    /**\n     * The package version's status description.\n     * @cloudformationAttribute StatusDescription\n     */\n    public readonly attrStatusDescription: string;\n\n    /**\n     * A package ID.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html#cfn-panorama-packageversion-packageid\n     */\n    public packageId: string;\n\n    /**\n     * A package version.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html#cfn-panorama-packageversion-packageversion\n     */\n    public packageVersion: string;\n\n    /**\n     * A patch version.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html#cfn-panorama-packageversion-patchversion\n     */\n    public patchVersion: string;\n\n    /**\n     * Whether to mark the new version as the latest version.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html#cfn-panorama-packageversion-marklatest\n     */\n    public markLatest: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * An owner account.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html#cfn-panorama-packageversion-owneraccount\n     */\n    public ownerAccount: string | undefined;\n\n    /**\n     * If the version was marked latest, the new version to maker as latest.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html#cfn-panorama-packageversion-updatedlatestpatchversion\n     */\n    public updatedLatestPatchVersion: string | undefined;\n\n    /**\n     * Create a new `AWS::Panorama::PackageVersion`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnPackageVersionProps) {\n        super(scope, id, { type: CfnPackageVersion.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'packageId', this);\n        cdk.requireProperty(props, 'packageVersion', this);\n        cdk.requireProperty(props, 'patchVersion', this);\n        this.attrIsLatestPatch = this.getAtt('IsLatestPatch');\n        this.attrPackageArn = cdk.Token.asString(this.getAtt('PackageArn'));\n        this.attrPackageName = cdk.Token.asString(this.getAtt('PackageName'));\n        this.attrRegisteredTime = cdk.Token.asNumber(this.getAtt('RegisteredTime'));\n        this.attrStatus = cdk.Token.asString(this.getAtt('Status'));\n        this.attrStatusDescription = cdk.Token.asString(this.getAtt('StatusDescription'));\n\n        this.packageId = props.packageId;\n        this.packageVersion = props.packageVersion;\n        this.patchVersion = props.patchVersion;\n        this.markLatest = props.markLatest;\n        this.ownerAccount = props.ownerAccount;\n        this.updatedLatestPatchVersion = props.updatedLatestPatchVersion;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnPackageVersion.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            packageId: this.packageId,\n            packageVersion: this.packageVersion,\n            patchVersion: this.patchVersion,\n            markLatest: this.markLatest,\n            ownerAccount: this.ownerAccount,\n            updatedLatestPatchVersion: this.updatedLatestPatchVersion,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnPackageVersionPropsToCloudFormation(props);\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
