{
  "version": 3,
  "sources": ["sns.ts"],
  "sourcesContent": ["import * as iam from '../../aws-iam';\nimport * as s3 from '../../aws-s3';\nimport * as sns from '../../aws-sns';\nimport { Construct } from 'constructs';\n\n/**\n * Use an SNS topic as a bucket notification destination\n */\nexport class SnsDestination implements s3.IBucketNotificationDestination {\n  constructor(private readonly topic: sns.ITopic) {\n  }\n\n  public bind(_scope: Construct, bucket: s3.IBucket): s3.BucketNotificationDestinationConfig {\n    this.topic.addToResourcePolicy(new iam.PolicyStatement({\n      principals: [new iam.ServicePrincipal('s3.amazonaws.com')],\n      actions: ['sns:Publish'],\n      resources: [this.topic.topicArn],\n      conditions: {\n        ArnLike: { 'aws:SourceArn': bucket.bucketArn },\n      },\n    }));\n\n    return {\n      arn: this.topic.topicArn,\n      type: s3.BucketNotificationDestinationType.TOPIC,\n      dependencies: [this.topic], // make sure the topic policy resource is created before the notification config\n    };\n  }\n}\n"],
  "mappings": "qNAAA,IAAA,QAAA,iBACA,GAAA,QAAA,gBAOA,oBAA2B,CACzB,YAA6B,MAAiB,CAAjB,KAAA,MAAA,gEAGtB,KAAK,OAAmB,OAAkB,mEAC/C,KAAK,MAAM,oBAAoB,GAAI,KAAI,gBAAgB,CACrD,WAAY,CAAC,GAAI,KAAI,iBAAiB,qBACtC,QAAS,CAAC,eACV,UAAW,CAAC,KAAK,MAAM,UACvB,WAAY,CACV,QAAS,CAAE,gBAAiB,OAAO,eAIhC,CACL,IAAK,KAAK,MAAM,SAChB,KAAM,GAAG,kCAAkC,MAC3C,aAAc,CAAC,KAAK,SAjB1B,QAAA,eAAA",
  "names": []
}
