{
  "version": 3,
  "sources": ["api.ts"],
  "sourcesContent": ["import * as apigw from '../../aws-apigateway';\nimport * as lambda from '../../aws-lambda';\nimport { Names, Stack } from '../../core';\n\nexport class ApiEventSource implements lambda.IEventSource {\n  constructor(private readonly method: string, private readonly path: string, private readonly options?: apigw.MethodOptions) {\n    if (!path.startsWith('/')) {\n      throw new Error(`Path must start with \"/\": ${path}`);\n    }\n  }\n\n  public bind(target: lambda.IFunction): void {\n    const id = `${Names.nodeUniqueId(target.node)}:ApiEventSourceA7A86A4F`;\n    const stack = Stack.of(target);\n    let api = stack.node.tryFindChild(id) as apigw.RestApi;\n    if (!api) {\n      api = new apigw.RestApi(stack, id, {\n        defaultIntegration: new apigw.LambdaIntegration(target),\n      });\n    }\n\n    const resource = api.root.resourceForPath(this.path);\n    resource.addMethod(this.method, undefined, this.options);\n  }\n}\n"],
  "mappings": "qNAAA,MAAA,QAAA,wBAEA,OAAA,QAAA,cAEA,oBAA2B,CACzB,YAA6B,OAAiC,KAA+B,QAA6B,CACxH,GAD2B,KAAA,OAAA,OAAiC,KAAA,KAAA,KAA+B,KAAA,QAAA,kFACvF,CAAC,KAAK,WAAW,KACnB,KAAM,IAAI,OAAM,6BAA6B,QAI1C,KAAK,OAAwB,kEAClC,KAAM,IAAK,GAAG,OAAA,MAAM,aAAa,OAAO,+BAClC,MAAQ,OAAA,MAAM,GAAG,QACvB,GAAI,KAAM,MAAM,KAAK,aAAa,IAClC,AAAK,KACH,KAAM,GAAI,OAAM,QAAQ,MAAO,GAAI,CACjC,mBAAoB,GAAI,OAAM,kBAAkB,WAKpD,AADiB,IAAI,KAAK,gBAAgB,KAAK,MACtC,UAAU,KAAK,OAAQ,OAAW,KAAK,UAlBpD,QAAA,eAAA",
  "names": []
}
