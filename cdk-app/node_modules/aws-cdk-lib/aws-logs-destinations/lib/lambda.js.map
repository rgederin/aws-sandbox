{
  "version": 3,
  "sources": ["lambda.ts"],
  "sourcesContent": ["import * as iam from '../../aws-iam';\nimport * as lambda from '../../aws-lambda';\nimport * as logs from '../../aws-logs';\nimport { Construct } from 'constructs';\n\n/**\n * Options that may be provided to LambdaDestination\n */\nexport interface LambdaDestinationOptions{\n  /** Whether or not to add Lambda Permissions.\n   * @default true\n   */\n  readonly addPermissions?: boolean;\n}\n\n/**\n * Use a Lambda Function as the destination for a log subscription\n */\nexport class LambdaDestination implements logs.ILogSubscriptionDestination {\n  /**  LambdaDestinationOptions */\n  constructor(private readonly fn: lambda.IFunction, private readonly options: LambdaDestinationOptions = {}) {\n  }\n\n  public bind(scope: Construct, logGroup: logs.ILogGroup): logs.LogSubscriptionDestinationConfig {\n    const arn = logGroup.logGroupArn;\n    if (this.options.addPermissions !== false) {\n      this.fn.addPermission('CanInvokeLambda', {\n        principal: new iam.ServicePrincipal('logs.amazonaws.com'),\n        sourceArn: arn,\n        // Using SubScription Filter as scope is okay, since every Subscription Filter has only\n        // one destination.\n        scope,\n      });\n    }\n    return { arn: this.fn.functionArn };\n  }\n}\n"],
  "mappings": "wNAAA,IAAA,QAAA,iBAkBA,uBAA8B,CAE5B,YAA6B,GAAuC,QAAoC,GAAE,CAA7E,KAAA,GAAA,GAAuC,KAAA,QAAA,iKAG7D,KAAK,MAAkB,SAAwB,kEACpD,KAAM,KAAM,SAAS,YACrB,MAAI,MAAK,QAAQ,iBAAmB,IAClC,KAAK,GAAG,cAAc,kBAAmB,CACvC,UAAW,GAAI,KAAI,iBAAiB,sBACpC,UAAW,IAGX,QAGG,CAAE,IAAK,KAAK,GAAG,cAhB1B,QAAA,kBAAA",
  "names": []
}
