{
  "version": 3,
  "sources": ["integ.event-ec2-task.lit.ts"],
  "sourcesContent": ["import * as path from 'path';\nimport * as ec2 from '../../../aws-ec2';\nimport * as ecs from '../../../aws-ecs';\nimport * as events from '../../../aws-events';\nimport * as cdk from '../../../core';\nimport * as targets from '../../lib';\n\n\nconst app = new cdk.App();\n\nclass EventStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'Vpc', { maxAzs: 1 });\n\n    const cluster = new ecs.Cluster(this, 'EcsCluster', { vpc });\n    cluster.addCapacity('DefaultAutoScalingGroup', {\n      instanceType: new ec2.InstanceType('t2.micro'),\n    });\n\n    /// !show\n    // Create a Task Definition for the container to start\n    const taskDefinition = new ecs.Ec2TaskDefinition(this, 'TaskDef');\n    taskDefinition.addContainer('TheContainer', {\n      image: ecs.ContainerImage.fromAsset(path.resolve(__dirname, 'eventhandler-image')),\n      memoryLimitMiB: 256,\n      logging: new ecs.AwsLogDriver({ streamPrefix: 'EventDemo' }),\n    });\n\n    // An Rule that describes the event trigger (in this case a scheduled run)\n    const rule = new events.Rule(this, 'Rule', {\n      schedule: events.Schedule.rate(cdk.Duration.minutes(1)),\n    });\n\n    // Use EcsTask as the target of the Rule\n    rule.addTarget(new targets.EcsTask({\n      cluster,\n      taskDefinition,\n      taskCount: 1,\n      containerOverrides: [{\n        containerName: 'TheContainer',\n        environment: [\n          { name: 'I_WAS_TRIGGERED', value: 'From CloudWatch Events' },\n        ],\n      }],\n    }));\n    /// !hide\n  }\n}\n\nnew EventStack(app, 'aws-ecs-integ-ecs');\napp.synth();\n"],
  "mappings": "oEAAA,KAAA,MAAA,QAAA,QACA,IAAA,QAAA,oBACA,IAAA,QAAA,oBACA,OAAA,QAAA,uBACA,IAAA,QAAA,iBACA,QAAA,QAAA,aAGM,IAAM,GAAI,KAAI,IAEpB,wBAAyB,KAAI,KAAK,CAChC,YAAY,MAAgB,GAAU,CACpC,MAAM,MAAO,IAEb,KAAM,KAAM,GAAI,KAAI,IAAI,KAAM,MAAO,CAAE,OAAQ,IAEzC,QAAU,GAAI,KAAI,QAAQ,KAAM,aAAc,CAAE,MACtD,QAAQ,YAAY,0BAA2B,CAC7C,aAAc,GAAI,KAAI,aAAa,cAKrC,KAAM,gBAAiB,GAAI,KAAI,kBAAkB,KAAM,WACvD,eAAe,aAAa,eAAgB,CAC1C,MAAO,IAAI,eAAe,UAAU,KAAK,QAAQ,UAAW,uBAC5D,eAAgB,IAChB,QAAS,GAAI,KAAI,aAAa,CAAE,aAAc,gBAShD,AALa,GAAI,QAAO,KAAK,KAAM,OAAQ,CACzC,SAAU,OAAO,SAAS,KAAK,IAAI,SAAS,QAAQ,MAIjD,UAAU,GAAI,SAAQ,QAAQ,CACjC,QACA,eACA,UAAW,EACX,mBAAoB,CAAC,CACnB,cAAe,eACf,YAAa,CACX,CAAE,KAAM,kBAAmB,MAAO,iCAQ5C,GAAI,YAAW,IAAK,qBACpB,IAAI",
  "names": []
}
