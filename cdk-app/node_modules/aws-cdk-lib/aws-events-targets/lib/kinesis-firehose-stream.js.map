{
  "version": 3,
  "sources": ["kinesis-firehose-stream.ts"],
  "sourcesContent": ["import * as events from '../../aws-events';\nimport * as iam from '../../aws-iam';\nimport * as firehose from '../../aws-kinesisfirehose';\nimport { singletonEventRole } from './util';\n\n/**\n * Customize the Firehose Stream Event Target\n */\nexport interface KinesisFirehoseStreamProps {\n  /**\n   * The message to send to the stream.\n   *\n   * Must be a valid JSON text passed to the target stream.\n   *\n   * @default - the entire Event Bridge event\n   */\n  readonly message?: events.RuleTargetInput;\n}\n\n\n/**\n * Customize the Firehose Stream Event Target\n */\nexport class KinesisFirehoseStream implements events.IRuleTarget {\n\n  constructor(private readonly stream: firehose.CfnDeliveryStream, private readonly props: KinesisFirehoseStreamProps = {}) {\n  }\n\n  /**\n   * Returns a RuleTarget that can be used to trigger this Firehose Stream as a\n   * result from a Event Bridge event.\n   */\n  public bind(_rule: events.IRule, _id?: string): events.RuleTargetConfig {\n    const policyStatements = [new iam.PolicyStatement({\n      actions: ['firehose:PutRecord', 'firehose:PutRecordBatch'],\n      resources: [this.stream.attrArn],\n    })];\n\n    return {\n      arn: this.stream.attrArn,\n      role: singletonEventRole(this.stream, policyStatements),\n      input: this.props.message,\n      targetResource: this.stream,\n    };\n  }\n}"],
  "mappings": "4NACA,IAAA,QAAA,iBAEA,OAAA,QAAA,UAoBA,2BAAkC,CAEhC,YAA6B,OAAqD,MAAoC,GAAE,CAA3F,KAAA,OAAA,OAAqD,KAAA,MAAA,iLAO3E,KAAK,MAAqB,IAAY,6DAC3C,KAAM,kBAAmB,CAAC,GAAI,KAAI,gBAAgB,CAChD,QAAS,CAAC,qBAAsB,2BAChC,UAAW,CAAC,KAAK,OAAO,YAG1B,MAAO,CACL,IAAK,KAAK,OAAO,QACjB,KAAM,OAAA,mBAAmB,KAAK,OAAQ,kBACtC,MAAO,KAAK,MAAM,QAClB,eAAgB,KAAK,SAnB3B,QAAA,sBAAA",
  "names": []
}
